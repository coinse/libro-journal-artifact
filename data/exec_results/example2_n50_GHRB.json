{
  "Hakky54_sslcontext-kickstart-167": {
    "Hakky54_sslcontext-kickstart_167_markdown_n21": "[error] StopIteration()",
    "Hakky54_sslcontext-kickstart_167_markdown_n6": "[error] LexerError('Unterminated character/string literal at \"\"\", line 12: KeyStore keyStore = KeyStore.getInstance(')",
    "Hakky54_sslcontext-kickstart_167_markdown_n38": "[error] StopIteration()",
    "Hakky54_sslcontext-kickstart_167_markdown_n46": "[error] JavaSyntaxError('')",
    "Hakky54_sslcontext-kickstart_167_markdown_n43": "[error] JavaSyntaxError('')",
    "Hakky54_sslcontext-kickstart_167_markdown_n10": "[error] LexerError('Unterminated character/string literal at \"\\n\", line 7: \"cmF')",
    "Hakky54_sslcontext-kickstart_167_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen(SSLFactoryShould.java:1980)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n31_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n35_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSslContextAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n1_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testAutoGen(SSLFactoryShould.java:1980)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n1_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testAutoGen(SSLFactoryShould.java:1980)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen(SSLFactoryShould.java:1981)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen(SSLFactoryShould.java:1981)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen(SSLFactoryShould.java:1981)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n26_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n25_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testAliasAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n14_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n45_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n16_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue108AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n13_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT.testIssueAutoGen(HotSwappableX509ExtendedTrustManagerIT.java:111)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n24_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSSLFactoryWithCertificateAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n42_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testSslContextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n29_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testSslContextAutoGen(SSLFactoryShould.java:1980)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testSslContextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSslContextAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testAliasAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n44_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n0_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testKeyStoreUtilsAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n0_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testKeyStoreUtilsAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n49_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testCreateTrustStoreAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n8_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n27_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testCreateSslContextAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testCreateSslContextAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n12_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testAliasAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n20_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n20_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n20_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n11_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen(SSLFactoryShould.java:1981)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT.testIssue106AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n5_buggy.txt",
        "fib_error_msg": [
          "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:135)\n",
          "\tat nl.altindag.ssl.util.CertificateUtils.loadCertificate(CertificateUtils.java:102)\n",
          "\tat nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT.testIssue106AutoGen(HotSwappableX509ExtendedTrustManagerIT.java:111)\n"
        ],
        "exception_type": "nl.altindag.ssl.exception.GenericIOException",
        "value_matching": null,
        "failure_message": "nl.altindag.ssl.exception.GenericIOException: nl.altindag.ssl.exception.GenericIOException: java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT.testIssue106AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.trustmanager.HotSwappableX509ExtendedTrustManagerIT#testIssue106AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue77AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n22_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue108AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n39_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n33_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testCertificateEntryAliasAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n9_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testCertificateListAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n28_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testCertificateAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n15_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testCertificateEntryAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testAliasAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n18_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.CertificateUtilsShould#testAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n4_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSslContextAutoGen"
    },
    "Hakky54_sslcontext-kickstart_167_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/167/Hakky54_sslcontext-kickstart_167_markdown_n30_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue107AutoGen"
    }
  },
  "Hakky54_sslcontext-kickstart-197": {
    "Hakky54_sslcontext-kickstart_197_markdown_n30": "[error] JavaSyntaxError('')",
    "Hakky54_sslcontext-kickstart_197_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.util.SSLSessionUtilsShould#testIssue107AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n25": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n25_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testCombinableTrustManagerAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n35_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testFactoryAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n2_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSSLFactoryAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n44_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryIT#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n43_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testUnsafeTrustAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue111AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue111AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n48_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryIT#testIssue110AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryIT#testAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n16_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue10AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n27_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testCombinableX509TrustManagerAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n4_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testAllCertificatesAcceptedAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n18": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "java.net.ConnectException: Connection refused (Connection refused)\n"
        ],
        "exception_type": "java.net.ConnectException",
        "value_matching": null,
        "failure_message": "java.net.ConnectException: Connection refused (Connection refused)"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryShould.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue108AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n9_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSSLFactoryAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n22": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n22_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryIT#testUntrustedCertAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n47": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSSLGroupAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n6_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue108AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue163AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n20_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryIT#testUnsafeTrustMaterialAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n19_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryIT#testSslContextAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n21": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n21_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue112AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n0_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testSelfSignedTrustStoreAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n13_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssueAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "nl.altindag.ssl.SSLFactoryIT.testIssue114AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n12_buggy.txt",
        "fib_error_msg": [
          "javax.net.ssl.SSLHandshakeException: None of the TrustManagers trust this certificate chain\n",
          "\tat sun.security.ssl.Alert.createSSLException(Alert.java:131)\n",
          "\tat sun.security.ssl.TransportContext.fatal(TransportContext.java:324)\n",
          "\tat sun.security.ssl.TransportContext.fatal(TransportContext.java:267)\n",
          "\tat sun.security.ssl.TransportContext.fatal(TransportContext.java:262)\n",
          "\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:654)\n",
          "\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:473)\n",
          "\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:369)\n",
          "\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:377)\n",
          "\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:444)\n",
          "\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:422)\n",
          "\tat sun.security.ssl.TransportContext.dispatch(TransportContext.java:182)\n",
          "\tat sun.security.ssl.SSLTransport.decode(SSLTransport.java:152)\n",
          "\tat sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1397)\n",
          "\tat sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1305)\n",
          "\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:440)\n",
          "\tat sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559)\n",
          "\tat sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:197)\n",
          "\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1572)\n",
          "\tat sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1500)\n",
          "\tat java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)\n",
          "\tat sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:352)\n",
          "\tat nl.altindag.ssl.SSLFactoryIT.testIssue114AutoGen(SSLFactoryIT.java:343)\n"
        ],
        "exception_type": "javax.net.ssl.SSLHandshakeException",
        "value_matching": null,
        "failure_message": "javax.net.ssl.SSLHandshakeException: None of the TrustManagers trust this certificate chain"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n12_fixed.txt"
      },
      "success": true,
      "injected_test": "nl.altindag.ssl.SSLFactoryIT#testIssue114AutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testAcceptAllAutoGen"
    },
    "Hakky54_sslcontext-kickstart_197_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/Hakky54_sslcontext-kickstart/197/Hakky54_sslcontext-kickstart_197_markdown_n28_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "nl.altindag.ssl.SSLFactoryShould#testIssue105AutoGen"
    }
  },
  "FasterXML_jackson-databind-3195": {
    "FasterXML_jackson-databind_3195_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testIssue163AutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.failing.JacksonInject2678Test#testEqualsAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.TestBeanDeserializer#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedFieldEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAnnotatedConstructorEqualityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n33_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.getAnnotated()\" because the return value of \"com.fasterxml.jackson.databind.introspect.AnnotatedClass.getDefaultConstructor()\" is null\n",
          "\tat com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector.testAnnotatedConstructorEqualityAutoGen(TestJacksonAnnotationIntrospector.java:214)\n",
          "\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.getAnnotated()\" because the return value of \"com.fasterxml.jackson.databind.introspect.AnnotatedClass.getDefaultConstructor()\" is null"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAnnotatedConstructorEqualityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testAnnotatedConstructorEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n45_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.IntrospectorPairTest#testAnnotatedMemberEqualityAutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.failing.TestObjectIdDeserialization#testIssue107AutoGen"
    },
    "FasterXML_jackson-databind_3195_markdown_n19": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n19_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.getAnnotated()\" because the return value of \"com.fasterxml.jackson.databind.introspect.AnnotatedClass.getDefaultConstructor()\" is null\n",
          "\tat com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector.testIssueAutoGen(TestJacksonAnnotationIntrospector.java:214)\n",
          "\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.getAnnotated()\" because the return value of \"com.fasterxml.jackson.databind.introspect.AnnotatedClass.getDefaultConstructor()\" is null"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3195/FasterXML_jackson-databind_3195_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.introspect.TestJacksonAnnotationIntrospector#testIssueAutoGen"
    }
  },
  "FasterXML_jackson-databind-3418": {
    "FasterXML_jackson-databind_3418_markdown_n34": "[error] JavaSyntaxError('')",
    "FasterXML_jackson-databind_3418_markdown_n35": "[error] LexerError('Could not process token at \"\\\\\", line 3: mapper.enable(DeserializationFeature.ACCEPT\\\\_SINGLE\\\\_VALUE\\\\_AS\\\\_ARRAY);')",
    "FasterXML_jackson-databind_3418_markdown_n14": "[error] LexerError('Could not process token at \"\\\\\", line 3: mapper.enable(DeserializationFeature.ACCEPT\\\\_SINGLE\\\\_VALUE\\\\_AS\\\\_ARRAY);')",
    "FasterXML_jackson-databind_3418_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.ArrayDeserializationTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n22_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n30_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue15AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n43_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue110AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n43_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue110AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n43_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue110AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.failing.TestObjectIdDeserialization#testIssue107AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.failing.TestObjectIdDeserialization#testIssue107AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.failing.TestObjectIdDeserialization#testIssue107AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n44_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testListDeserializationAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListIssueAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListIssueAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n16_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyElementAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n42_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue115AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n33_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n33_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n33_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue161AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n20_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.ObjectReaderTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n4_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssueAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n29_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n17_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyArrayAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n48_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n19_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.struct.TestPOJOAsArray#testEmptyAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n27_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.node.TestConversions#testDeserializeEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n11_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n8_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssueAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n49_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.struct.SingleValueAsArrayTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n21_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue86AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n38_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n15_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testXmlAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n0_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.node.TreeReadViaMapperTest#testIssueAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n13_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testIssue108AutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n46_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    },
    "FasterXML_jackson-databind_3418_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/FasterXML_jackson-databind/3418/FasterXML_jackson-databind_3418_markdown_n36_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.fasterxml.jackson.databind.deser.jdk.CollectionDeserTest#testEmptyListAutoGen"
    }
  },
  "jhy_jsoup-1648": {
    "jhy_jsoup_1648_markdown_n47": "[error] JavaSyntaxError('')",
    "jhy_jsoup_1648_markdown_n31": "[error] LexerError('Unterminated character/string literal at \" \", line 17: String expected = \"<!DOCTYPE html PUBLIC \\\\\"-/')",
    "jhy_jsoup_1648_markdown_n14": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "jhy_jsoup_1648_markdown_n28": "[error] StopIteration()",
    "jhy_jsoup_1648_markdown_n7": "[error] LexerError('Unterminated character/string literal at \"\\n\", line 14: ')",
    "jhy_jsoup_1648_markdown_n32": "[error] LexerError('Could not process token at \"`\", line 13: `')",
    "jhy_jsoup_1648_markdown_n49": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "jhy_jsoup_1648_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n42": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n41": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n10_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue108AutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue108AutoGen"
    },
    "jhy_jsoup_1648_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssueAutoGen"
    },
    "jhy_jsoup_1648_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssueAutoGen"
    },
    "jhy_jsoup_1648_markdown_n18": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue101AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue101AutoGen(W3CDomTest.java:326)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue101AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue101AutoGen"
    },
    "jhy_jsoup_1648_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n46": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue105AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n46_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue105AutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue105AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue105AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n46_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue105AutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue105AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue105AutoGen"
    },
    "jhy_jsoup_1648_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n48_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue107AutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n8": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n8_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue108AutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue108AutoGen"
    },
    "jhy_jsoup_1648_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n8_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue108AutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue108AutoGen"
    },
    "jhy_jsoup_1648_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.integration.ConnectTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testHtml2W3CAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n5_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"><html><head></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testHtml2W3CAutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"><html><head></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testHtml2W3CAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testHtml2W3CAutoGen"
    },
    "jhy_jsoup_1648_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n4_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue107AutoGen(W3CDomTest.java:324)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html SYSTEM \"about:legacy-compat\"><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.test_Issue_107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n40_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.test_Issue_107AutoGen(W3CDomTest.java:324)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.test_Issue_107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#test_Issue_107AutoGen"
    },
    "jhy_jsoup_1648_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue113AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <false> but was: <true>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue113AutoGen(W3CDomTest.java:328)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <false> but was: <true>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <false> but was: <true>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue113AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue113AutoGen"
    },
    "jhy_jsoup_1648_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue136AutoGen"
    },
    "jhy_jsoup_1648_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n11_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <true> but was: <false>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue108AutoGen(W3CDomTest.java:326)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <true> but was: <false>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <true> but was: <false>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n11_fixed.txt"
      },
      "success": true,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue108AutoGen"
    },
    "jhy_jsoup_1648_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testW3CDomOutputHtmlAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n15_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
          "<html><head><META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"></head><body name=\"\" style=\"color: red\"><p hnh=\"2\">unicode attr names</p></body></html>>\n",
          "\tat org.jsoup.helper.W3CDomTest.testW3CDomOutputHtmlAutoGen(W3CDomTest.java:325)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<!DOCTYPE html><html><head></head><body style=\"color: red\" \" name\"><p h\u00e0nh=\"1\" h\u00ecnh=\"2\">unicode attr names</p></body></html>> but was: <<!DOCTYPE html SYSTEM \"about:legacy-compat\">\n",
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testW3CDomOutputHtmlAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testW3CDomOutputHtmlAutoGen"
    },
    "jhy_jsoup_1648_markdown_n38": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n38_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <true> but was: <false>\n",
          "\tat org.jsoup.helper.W3CDomTest.testIssue108AutoGen(W3CDomTest.java:326)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <true> but was: <false>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <true> but was: <false>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.helper.W3CDomTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1648/jhy_jsoup_1648_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.helper.W3CDomTest#testIssue108AutoGen"
    }
  },
  "jhy_jsoup-1763": {
    "jhy_jsoup_1763_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n19": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n46": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n46_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testIssue107AutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n25": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n46_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testIssue107AutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n47": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n26": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n42": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n16_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testIssue108AutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testIssue108AutoGen"
    },
    "jhy_jsoup_1763_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyCtorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyCtorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n21": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n27": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafeListCopyAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n6_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\">> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafeListCopyAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" baz=\"val\">> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\">> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafeListCopyAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafeListCopyAutoGen"
    },
    "jhy_jsoup_1763_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n14": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n4_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n4_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n11_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n32": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n32_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testIssue107AutoGen(SelectorTest.java:1120)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.safety.CleanerTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n9_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.safety.CleanerTest.testSafelistAutoGen(CleanerTest.java:347)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.safety.CleanerTest.testSafelistAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.safety.CleanerTest#testSafelistAutoGen"
    },
    "jhy_jsoup_1763_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n35_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.XpathTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n41": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.parser.HtmlParserTest.testSafelistSharingAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n41_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.parser.HtmlParserTest.testSafelistSharingAutoGen(HtmlParserTest.java:1643)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\"></foo>> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.parser.HtmlParserTest.testSafelistSharingAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistSharingAutoGen"
    },
    "jhy_jsoup_1763_markdown_n22": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue108_1AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n22_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testIssue108_1AutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue108_1AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testIssue108_1AutoGen"
    },
    "jhy_jsoup_1763_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue108_1AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n22_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testIssue108_1AutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue108_1AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testIssue108_1AutoGen"
    },
    "jhy_jsoup_1763_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.parser.HtmlParserTest.testSafelistCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n17_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <false> but was: <true>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertFalse.assertFalse(AssertFalse.java:40)\n",
          "\tat org.junit.jupiter.api.AssertFalse.assertFalse(AssertFalse.java:35)\n",
          "\tat org.junit.jupiter.api.Assertions.assertFalse(Assertions.java:227)\n",
          "\tat org.jsoup.parser.HtmlParserTest.testSafelistCopyConstructorAutoGen(HtmlParserTest.java:1643)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <false> but was: <true>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <false> but was: <true>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n17_fixed.txt"
      },
      "success": true,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n18": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testCopyConstructorAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\" baz=\"val\" />> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testCopyConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n39": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n39_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: not equal but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)\n",
          "\tat org.junit.jupiter.api.AssertNotEquals.failEqual(AssertNotEquals.java:276)\n",
          "\tat org.junit.jupiter.api.AssertNotEquals.assertNotEquals(AssertNotEquals.java:265)\n",
          "\tat org.junit.jupiter.api.AssertNotEquals.assertNotEquals(AssertNotEquals.java:260)\n",
          "\tat org.junit.jupiter.api.Assertions.assertNotEquals(Assertions.java:2815)\n",
          "\tat org.jsoup.select.SelectorTest.testIssue107AutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: not equal but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: not equal but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n39_fixed.txt"
      },
      "success": true,
      "injected_test": "org.jsoup.select.SelectorTest#testIssue107AutoGen"
    },
    "jhy_jsoup_1763_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testSafelistCopyConstructorAutoGen"
    },
    "jhy_jsoup_1763_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistCopyConstructorSharingStateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n2_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\">> but was: <<foo bar=\"val\" baz=\"val\"></foo>>\n",
          "\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\n",
          "\tat org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\n",
          "\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\n",
          "\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)\n",
          "\tat org.jsoup.select.SelectorTest.testSafelistCopyConstructorSharingStateAutoGen(SelectorTest.java:1121)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <<foo bar=\"val\">> but was: <<foo bar=\"val\" baz=\"val\"></foo>>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <<foo bar=\"val\">> but was: <<foo bar=\"val\" baz=\"val\"></foo>>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "org.jsoup.select.SelectorTest.testSafelistCopyConstructorSharingStateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.select.SelectorTest#testSafelistCopyConstructorSharingStateAutoGen"
    },
    "jhy_jsoup_1763_markdown_n38": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/jhy_jsoup/1763/jhy_jsoup_1763_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "org.jsoup.parser.HtmlParserTest#testCopyConstructorIssueAutoGen"
    }
  },
  "google_gson-2060": {
    "google_gson_2060_markdown_n48": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n7": "[error] StopIteration()",
    "google_gson_2060_markdown_n3": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n13": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n15": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n31": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n9": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n23": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n10": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n39": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n27": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n17": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n46": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n24": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n16": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n21": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n11": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n28": "[error] StopIteration()",
    "google_gson_2060_markdown_n36": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n35": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n33": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n22": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "google_gson_2060_markdown_n12": "[error] StopIteration()",
    "google_gson_2060_markdown_n0": "[error] StopIteration()",
    "google_gson_2060_markdown_n4": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n42": "[error] JavaSyntaxError('')",
    "google_gson_2060_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrettyPrintingTest#testIssueAutoGen"
    },
    "google_gson_2060_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.sql.SqlTypesGsonTest#testIssue108AutoGen"
    },
    "google_gson_2060_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.CollectionTest#testLazilyParsedNumberBeingSerialisedAsJsonObjectAutoGen"
    },
    "google_gson_2060_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<{\"event\":[ 4, \"severity\": 2, \"notify\": true, \"sound\": false ]}> but was:<{\"event\":[4.0,\"severity\":2.0,\"notify\":true,\"sound\":false]}>\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testIssue108AutoGen(StreamingTypeAdaptersTest.java:250)\n",
          "\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<{\"event\":[ 4, \"severity\": 2, \"notify\": true, \"sound\": false ]}> but was:<{\"event\":[4.0,\"severity\":2.0,\"notify\":true,\"sound\":false]}>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<{\"event\":[ 4, \"severity\": 2, \"notify\": true, \"sound\": false ]}> but was:<{\"event\":[4.0,\"severity\":2.0,\"notify\":true,\"sound\":false]}>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testIssue108AutoGen"
    },
    "google_gson_2060_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrettyPrintingTest#testLazilyParsedNumberAutoGen"
    },
    "google_gson_2060_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testIssue110AutoGen"
    },
    "google_gson_2060_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.CustomTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2060_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testDeserialiseAutoGen"
    },
    "google_gson_2060_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.JsonParserTest#testNumberAutoGen"
    },
    "google_gson_2060_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.CustomTypeAdaptersTest#testGsonAutoGen"
    },
    "google_gson_2060_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrettyPrintingTest#testIssueAutoGen"
    },
    "google_gson_2060_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2060/google_gson_2060_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.sql.SqlTypesGsonTest#testIssueAutoGen"
    }
  },
  "google_gson-2061": {
    "google_gson_2061_markdown_n44": "[error] JavaSyntaxError('')",
    "google_gson_2061_markdown_n18": "[error] LexerError('Could not process token at \"\\\\\", line 5: assertEquals(JsonToken.BEGIN\\\\_OBJECT, reader.peek());')",
    "google_gson_2061_markdown_n48": "[error] LexerError('Could not process token at \"\\\\\", line 3: assertEquals(JsonToken.BEGIN\\\\_OBJECT, reader.peek());')",
    "google_gson_2061_markdown_n37": "[error] LexerError('Could not process token at \"\\\\\", line 4: assertEquals(JsonToken.BEGIN\\\\_ARRAY, reader.peek());')",
    "google_gson_2061_markdown_n11": "[error] LexerError('Could not process token at \"\\\\\", line 3: assertEquals(JsonToken.BEGIN\\\\_OBJECT, reader.peek());')",
    "google_gson_2061_markdown_n19": "[error] LexerError('Could not process token at \"\\\\\", line 3: assertEquals(JsonToken.BEGIN\\\\_OBJECT, reader.peek());')",
    "google_gson_2061_markdown_n15": "[error] LexerError('Could not process token at \"\\\\\", line 3: assertEquals(JsonToken.BEGIN\\\\_OBJECT, jsonReader.peek());')",
    "google_gson_2061_markdown_n33": "[error] LexerError('Could not process token at \"\\\\\", line 3: assertEquals(JsonToken.BEGIN\\\\_OBJECT, reader.peek());')",
    "google_gson_2061_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue101AutoGen"
    },
    "google_gson_2061_markdown_n41": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue109AutoGen"
    },
    "google_gson_2061_markdown_n27": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue106AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n27_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue106AutoGen(JsonReaderTest.java:1811)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n27_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue106AutoGen"
    },
    "google_gson_2061_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssueEofAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n24_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssueEofAutoGen(JsonReaderTest.java:1810)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n24_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssueEofAutoGen"
    },
    "google_gson_2061_markdown_n14": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n14_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testNextAutoGen(JsonReaderTest.java:1812)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n14_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testNextAutoGen"
    },
    "google_gson_2061_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n10_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue108AutoGen(JsonReaderTest.java:1811)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n10_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue108AutoGen"
    },
    "google_gson_2061_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n10_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue108AutoGen(JsonReaderTest.java:1811)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n10_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue108AutoGen"
    },
    "google_gson_2061_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue109AutoGen"
    },
    "google_gson_2061_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testReaderAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n31_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testReaderAutoGen(JsonReaderTest.java:1813)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n31_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testReaderAutoGen"
    },
    "google_gson_2061_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n28_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testHasNextAutoGen"
    },
    "google_gson_2061_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testJsonReaderHasNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testJsonReaderHasNextAutoGen(JsonReaderTest.java:1809)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n34_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testJsonReaderHasNextAutoGen"
    },
    "google_gson_2061_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue108AutoGen"
    },
    "google_gson_2061_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue108AutoGen"
    },
    "google_gson_2061_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testHasNext_endDocumentAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testHasNext_endDocumentAutoGen(JsonReaderTest.java:1808)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testHasNext_endDocumentAutoGen"
    },
    "google_gson_2061_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testJsonReaderHasNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n9_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: expected:<END_DOCUMENT> but was:<END_ARRAY>\n",
          "\tat com.google.gson.stream.JsonReaderTest.testJsonReaderHasNextAutoGen(JsonReaderTest.java:1811)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": "expected:<END_DOCUMENT> but was:<END_ARRAY>",
        "failure_message": "junit.framework.AssertionFailedError: expected:<END_DOCUMENT> but was:<END_ARRAY>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testJsonReaderHasNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testJsonReaderHasNextAutoGen"
    },
    "google_gson_2061_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue113AutoGen"
    },
    "google_gson_2061_markdown_n32": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testHasNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n32_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testHasNextAutoGen(JsonReaderTest.java:1812)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n32_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testHasNextAutoGen"
    },
    "google_gson_2061_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssueJsonReaderHasNextEndDocumentAutoGen"
    },
    "google_gson_2061_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue121AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n1_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue121AutoGen(JsonReaderTest.java:1813)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n1_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue121AutoGen"
    },
    "google_gson_2061_markdown_n21": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testJsonReader_hasNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testJsonReader_hasNextAutoGen"
    },
    "google_gson_2061_markdown_n46": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue111AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n46_buggy.txt",
        "fib_error_msg": [
          "java.lang.IllegalStateException: Expected BEGIN_OBJECT but was BEGIN_ARRAY at line 1 column 2 path $\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue111AutoGen(JsonReaderTest.java:1807)\n",
          "\n"
        ],
        "exception_type": "java.lang.IllegalStateException",
        "value_matching": null,
        "failure_message": "java.lang.IllegalStateException: Expected BEGIN_OBJECT but was BEGIN_ARRAY at line 1 column 2 path $"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue111AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue111AutoGen"
    },
    "google_gson_2061_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssueAutoGen"
    },
    "google_gson_2061_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssueAutoGen"
    },
    "google_gson_2061_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testHasNextAtEndAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n6_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testHasNextAtEndAutoGen(JsonReaderTest.java:1809)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n6_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testHasNextAtEndAutoGen"
    },
    "google_gson_2061_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue120AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n43_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue120AutoGen(JsonReaderTest.java:1813)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n43_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue120AutoGen"
    },
    "google_gson_2061_markdown_n25": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue126AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n25_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue126AutoGen(JsonReaderTest.java:1809)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue126AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue126AutoGen"
    },
    "google_gson_2061_markdown_n47": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n47_buggy.txt",
        "fib_error_msg": [
          "java.io.EOFException: End of input at line 1 column 1 path $\n",
          "\tat com.google.gson.stream.JsonReaderTest.testNextAutoGen(JsonReaderTest.java:1807)\n",
          "\n"
        ],
        "exception_type": "java.io.EOFException",
        "value_matching": null,
        "failure_message": "java.io.EOFException: End of input at line 1 column 1 path $"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testNextAutoGen"
    },
    "google_gson_2061_markdown_n39": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testJsonReaderAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n39_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testJsonReaderAutoGen(JsonReaderTest.java:1812)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n39_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testJsonReaderAutoGen"
    },
    "google_gson_2061_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testJsonReaderAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n5_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testJsonReaderAutoGen(JsonReaderTest.java:1809)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testJsonReaderAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testJsonReaderAutoGen"
    },
    "google_gson_2061_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue110AutoGen"
    },
    "google_gson_2061_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n2_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssueAutoGen(JsonReaderTest.java:1812)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n2_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssueAutoGen"
    },
    "google_gson_2061_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue115AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n7_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue115AutoGen(JsonReaderTest.java:1816)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n7_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue115AutoGen"
    },
    "google_gson_2061_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssueJsonReaderAutoGen"
    },
    "google_gson_2061_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testHasNextAutoGen"
    },
    "google_gson_2061_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue108AutoGen"
    },
    "google_gson_2061_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue107AutoGen"
    },
    "google_gson_2061_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testJsonReaderAutoGen"
    },
    "google_gson_2061_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.test_hasNextAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n20_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.test_hasNextAutoGen(JsonReaderTest.java:1814)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n20_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#test_hasNextAutoGen"
    },
    "google_gson_2061_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssueJsonReaderHasNextAutoGen"
    },
    "google_gson_2061_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n36_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue108AutoGen(JsonReaderTest.java:1809)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n36_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue108AutoGen"
    },
    "google_gson_2061_markdown_n26": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue108AutoGen"
    },
    "google_gson_2061_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonReaderTest.testIssue114AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat com.google.gson.stream.JsonReaderTest.testIssue114AutoGen(JsonReaderTest.java:1813)\n",
          "\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2061/google_gson_2061_markdown_n23_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonReaderTest#testIssue114AutoGen"
    }
  },
  "google_gson-2153": {
    "google_gson_2153_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n16_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.ReflectionAccessTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n24_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testIssue1640AutoGen"
    },
    "google_gson_2153_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n39_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testIssue788AutoGen"
    },
    "google_gson_2153_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n2_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testGsonAutoGen(StreamingTypeAdaptersTest.java:246)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonAutoGen"
    },
    "google_gson_2153_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueGsonAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueGsonAutoGen(DefaultDateTypeAdapterTest.java:221)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueGsonAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssueGsonAutoGen"
    },
    "google_gson_2153_markdown_n41": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonAdapterNullAutoGen"
    },
    "google_gson_2153_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonAdapterNullAutoGen"
    },
    "google_gson_2153_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonAdapterNullAutoGen"
    },
    "google_gson_2153_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonAdapterNullAutoGen"
    },
    "google_gson_2153_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n30_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testNullForTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n27_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testAdapterGetterAcceptsNullAutoGen"
    },
    "google_gson_2153_markdown_n18": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen(StreamingTypeAdaptersTest.java:246)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testAdapterForNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen(StreamingTypeAdaptersTest.java:246)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testAdapterForNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen(StreamingTypeAdaptersTest.java:246)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testAdapterForNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen(StreamingTypeAdaptersTest.java:246)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testAdapterForNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testAdapterForNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n22_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.internal.bind.RecursiveTypesResolveTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n22_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.internal.bind.RecursiveTypesResolveTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n43_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.RecursiveTypesResolveTest.testNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n40_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.internal.bind.RecursiveTypesResolveTest.testNullTypeTokenAutoGen(RecursiveTypesResolveTest.java:106)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.RecursiveTypesResolveTest.testNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.RecursiveTypesResolveTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n19_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testNullArgumentAutoGen"
    },
    "google_gson_2153_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGsonGetAdapterWithNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n33_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGsonGetAdapterWithNullAutoGen(DefaultDateTypeAdapterTest.java:220)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGsonGetAdapterWithNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testGsonGetAdapterWithNullAutoGen"
    },
    "google_gson_2153_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGetAdapterWithNullArgumentAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n20_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGetAdapterWithNullArgumentAutoGen(DefaultDateTypeAdapterTest.java:224)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGetAdapterWithNullArgumentAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testGetAdapterWithNullArgumentAutoGen"
    },
    "google_gson_2153_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n26_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n21": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGsonGetAdapterWithNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n21_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGsonGetAdapterWithNullAutoGen(DefaultDateTypeAdapterTest.java:221)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testGsonGetAdapterWithNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testGsonGetAdapterWithNullAutoGen"
    },
    "google_gson_2153_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2153_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n4_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat junit.framework.Assert.fail(Assert.java:55)\n",
          "\tat junit.framework.Assert.fail(Assert.java:64)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:230)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterNullAutoGen(StreamingTypeAdaptersTest.java:251)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGetAdapterNullAutoGen"
    },
    "google_gson_2153_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n31_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonGetAdapterTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n31_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonGetAdapterTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n46_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.ReflectionAccessTest#testGetAdapterWithNullTypeTokenThrowsExceptionAutoGen"
    },
    "google_gson_2153_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testIssue634AutoGen"
    },
    "google_gson_2153_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterWithNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n35_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterWithNullTypeTokenAutoGen(StreamingTypeAdaptersTest.java:247)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterWithNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGetAdapterWithNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n14": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n14_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<type is null> but was:<null>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterAutoGen(StreamingTypeAdaptersTest.java:252)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<type is null> but was:<null>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<type is null> but was:<null>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGetAdapterAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGetAdapterAutoGen"
    },
    "google_gson_2153_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2153_markdown_n42": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n42_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen(DefaultDateTypeAdapterTest.java:219)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssueAutoGen"
    },
    "google_gson_2153_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGetAdapterNullAutoGen"
    },
    "google_gson_2153_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n34_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonGetAdapterNullAutoGen"
    },
    "google_gson_2153_markdown_n25": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n25_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testIssueAutoGen"
    },
    "google_gson_2153_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n25_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testIssueAutoGen"
    },
    "google_gson_2153_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonGetAdapterNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n44_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<typeToken == null> but was:<null>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testGsonGetAdapterNullTypeTokenAutoGen(StreamingTypeAdaptersTest.java:252)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<typeToken == null> but was:<null>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<typeToken == null> but was:<null>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonGetAdapterNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonGetAdapterNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n17_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.ReflectionAccessTest.testGsonWithNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n28_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: There should not be any exception thrown when passing null as TypeToken to getAdapter() method of Gson class.\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.functional.ReflectionAccessTest.testGsonWithNullTypeTokenAutoGen(ReflectionAccessTest.java:130)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: There should not be any exception thrown when passing null as TypeToken to getAdapter() method of Gson class."
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.ReflectionAccessTest.testGsonWithNullTypeTokenAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.ReflectionAccessTest#testGsonWithNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n13_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonGetAdapterAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n45_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testGsonGetAdapterAutoGen(StreamingTypeAdaptersTest.java:247)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonGetAdapterAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonGetAdapterAutoGen"
    },
    "google_gson_2153_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonNullAdapterAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "java.lang.NullPointerException\n",
          "\tat com.google.gson.internal.bind.TypeAdapters$34.create(TypeAdapters.java:969)\n",
          "\tat com.google.gson.Gson.getAdapter(Gson.java:531)\n",
          "\tat com.google.gson.functional.StreamingTypeAdaptersTest.testGsonNullAdapterAutoGen(StreamingTypeAdaptersTest.java:247)\n"
        ],
        "exception_type": "java.lang.NullPointerException",
        "value_matching": null,
        "failure_message": "java.lang.NullPointerException"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.StreamingTypeAdaptersTest.testGsonNullAdapterAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonNullAdapterAutoGen"
    },
    "google_gson_2153_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n38_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n6_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonNullAdapterAutoGen"
    },
    "google_gson_2153_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.ReflectionAccessTest#testNullTypeTokenAutoGen"
    },
    "google_gson_2153_markdown_n8": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n8_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonAutoGen"
    },
    "google_gson_2153_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2153/google_gson_2153_markdown_n0_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.google.gson.functional.StreamingTypeAdaptersTest#testGsonIssueAutoGen"
    }
  },
  "google_gson-2071": {
    "google_gson_2071_markdown_n33": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n20": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n40": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n18": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n28": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n36": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n13": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n24": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n27": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n12": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n14": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n17": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n35": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n9": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n34": "[error] JavaSyntaxError('')",
    "google_gson_2071_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testIssue1708AutoGen"
    },
    "google_gson_2071_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testIssue1550AutoGen"
    },
    "google_gson_2071_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testIssue1550AutoGen"
    },
    "google_gson_2071_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testIssue1708AutoGen"
    },
    "google_gson_2071_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2071_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testIssue1387AutoGen"
    },
    "google_gson_2071_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testIssue1708AutoGen"
    },
    "google_gson_2071_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.EnumTest#testIssue1708AutoGen"
    },
    "google_gson_2071_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testIssueAutoGen"
    },
    "google_gson_2071_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    },
    "google_gson_2071_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n2_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.EnumTest#testIssue1708AutoGen"
    },
    "google_gson_2071_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2071/google_gson_2071_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.MapTest#testEnumMapAutoGen"
    }
  },
  "google_gson-2158": {
    "google_gson_2158_markdown_n24": "[error] LexerError('Unterminated character/string literal at \"\"\", line 13: assertEquals(')",
    "google_gson_2158_markdown_n19": "[error] JavaSyntaxError('')",
    "google_gson_2158_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue1134AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue1134AutoGen"
    },
    "google_gson_2158_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n2_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen(PrimitiveTest.java:903)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n2_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypeAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testPrimitiveAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n25": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue107AutoGen"
    },
    "google_gson_2158_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2158_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2158_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2158_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2158_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2158_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n5_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<[0]> but was:<[1.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testIssueAutoGen(PrimitiveTest.java:902)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<[0]> but was:<[1.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<[0]> but was:<[1.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n18": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersShouldNotAllowLossySerializationAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypeAdaptersShouldNotAllowLossySerializationAutoGen"
    },
    "google_gson_2158_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue108AutoGen"
    },
    "google_gson_2158_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue108AutoGen"
    },
    "google_gson_2158_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue108AutoGen"
    },
    "google_gson_2158_markdown_n22": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue108AutoGen"
    },
    "google_gson_2158_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue108AutoGen"
    },
    "google_gson_2158_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue108AutoGen"
    },
    "google_gson_2158_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testPrimitiveNumericConversionAutoGen"
    },
    "google_gson_2158_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue109AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n4_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: expected:<3> but was:<1.5>\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:78)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:86)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:246)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testIssue109AutoGen(PrimitiveTest.java:902)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": "expected:<3> but was:<1.5>",
        "failure_message": "junit.framework.AssertionFailedError: expected:<3> but was:<1.5>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue109AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue109AutoGen"
    },
    "google_gson_2158_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n26": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypesAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n0_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testPrimitiveTypesAutoGen(PrimitiveTest.java:904)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n0_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypesAutoGen"
    },
    "google_gson_2158_markdown_n38": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n38_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen(PrimitiveTest.java:903)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypeAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypeAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n33_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testIssueAutoGen(PrimitiveTest.java:903)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n33_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.CustomTypeAdaptersTest.testIssue116AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n28_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.CustomTypeAdaptersTest.testIssue116AutoGen(CustomTypeAdaptersTest.java:469)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.CustomTypeAdaptersTest.testIssue116AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.CustomTypeAdaptersTest#testIssue116AutoGen"
    },
    "google_gson_2158_markdown_n46": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue109AutoGen"
    },
    "google_gson_2158_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.GsonTest#testNumericConversionAutoGen"
    },
    "google_gson_2158_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testIssue128AutoGen"
    },
    "google_gson_2158_markdown_n27": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testIssue128AutoGen"
    },
    "google_gson_2158_markdown_n41": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n41_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testIssueAutoGen(PrimitiveTest.java:903)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n41_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testGsonPrimitiveConversionAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n9_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testGsonPrimitiveConversionAutoGen(PrimitiveTest.java:902)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n9_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testGsonPrimitiveConversionAutoGen"
    },
    "google_gson_2158_markdown_n47": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.metrics.PerformanceTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n47_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<[\"1.5\"]> but was:<[1.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.metrics.PerformanceTest.testIssueAutoGen(PerformanceTest.java:348)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<[\"1.5\"]> but was:<[1.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<[\"1.5\"]> but was:<[1.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.metrics.PerformanceTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.metrics.PerformanceTest.testIssue111AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n1_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat junit.framework.Assert.fail(Assert.java:55)\n",
          "\tat junit.framework.Assert.fail(Assert.java:64)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:230)\n",
          "\tat com.google.gson.metrics.PerformanceTest.testIssue111AutoGen(PerformanceTest.java:350)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.metrics.PerformanceTest.testIssue111AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testIssue111AutoGen"
    },
    "google_gson_2158_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.metrics.PerformanceTest.testIssue188AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n6_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError\n",
          "\tat junit.framework.Assert.fail(Assert.java:55)\n",
          "\tat junit.framework.Assert.fail(Assert.java:64)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:230)\n",
          "\tat com.google.gson.metrics.PerformanceTest.testIssue188AutoGen(PerformanceTest.java:350)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.metrics.PerformanceTest.testIssue188AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testIssue188AutoGen"
    },
    "google_gson_2158_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n7_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue107AutoGen"
    },
    "google_gson_2158_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypeAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypeAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveTypeAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n12_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testIssueAutoGen(PrimitiveTest.java:904)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n12_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n42": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testIssue147AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.0]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testIssue147AutoGen(PrimitiveTest.java:903)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.0]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.0]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testIssue147AutoGen"
    },
    "google_gson_2158_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.CustomTypeAdaptersTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.CustomTypeAdaptersTest#testIssueAutoGen"
    },
    "google_gson_2158_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonWriterTest.testPrimitiveTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testPrimitiveTypeAdaptersAutoGen"
    },
    "google_gson_2158_markdown_n14": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testPrimitiveSerializationAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n14_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.functional.PrimitiveTest.testPrimitiveSerializationAutoGen(PrimitiveTest.java:903)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<1[]> but was:<1[.5]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<1[]> but was:<1[.5]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n14_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testPrimitiveSerializationAutoGen"
    },
    "google_gson_2158_markdown_n39": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.PrimitiveTest.testTypeAdaptersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2158/google_gson_2158_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.PrimitiveTest#testTypeAdaptersAutoGen"
    }
  },
  "google_gson-2130": {
    "google_gson_2130_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonWriterTest.testFloatAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<[3.72337[9]]> but was:<[3.72337[8896713257]]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.stream.JsonWriterTest.testFloatAutoGen(JsonWriterTest.java:746)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<[3.72337[9]]> but was:<[3.72337[8896713257]]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<[3.72337[9]]> but was:<[3.72337[8896713257]]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n49_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n7_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue0AutoGen"
    },
    "google_gson_2130_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterWithFloatAutoGen"
    },
    "google_gson_2130_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue108AutoGen"
    },
    "google_gson_2130_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue110AutoGen"
    },
    "google_gson_2130_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.ReadersWritersTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterFloatAutoGen"
    },
    "google_gson_2130_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonWriterTest.testJsonWriter_floatAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n24_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<[3.72337[9]]> but was:<[3.72337[8896713257]]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.stream.JsonWriterTest.testJsonWriter_floatAutoGen(JsonWriterTest.java:747)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<[3.72337[9]]> but was:<[3.72337[8896713257]]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<[3.72337[9]]> but was:<[3.72337[8896713257]]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n24_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriter_floatAutoGen"
    },
    "google_gson_2130_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.GsonTest#testIssue108AutoGen"
    },
    "google_gson_2130_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.GsonTest#testIssue108AutoGen"
    },
    "google_gson_2130_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterFloatAutoGen"
    },
    "google_gson_2130_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterFloatAutoGen"
    },
    "google_gson_2130_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n28_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonFloatAutoGen"
    },
    "google_gson_2130_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterFloatAutoGen"
    },
    "google_gson_2130_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.ParameterizedTypesTest#testIssue200AutoGen"
    },
    "google_gson_2130_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterAutoGen"
    },
    "google_gson_2130_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterAutoGen"
    },
    "google_gson_2130_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterAutoGen"
    },
    "google_gson_2130_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterAutoGen"
    },
    "google_gson_2130_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterAutoGen"
    },
    "google_gson_2130_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testDecimalFormatAutoGen"
    },
    "google_gson_2130_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.ReflectionAccessTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.metrics.PerformanceTest#testIssueJsonWriterFloatAutoGen"
    },
    "google_gson_2130_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n3_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n3_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue110AutoGen"
    },
    "google_gson_2130_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue108AutoGen"
    },
    "google_gson_2130_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue108AutoGen"
    },
    "google_gson_2130_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2130_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssueAutoGen"
    },
    "google_gson_2130_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    },
    "google_gson_2130_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.stream.JsonWriterTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n16_buggy.txt",
        "fib_error_msg": [
          "junit.framework.ComparisonFailure: expected:<3.72337[9]> but was:<3.72337[8896713257]>\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:100)\n",
          "\tat junit.framework.Assert.assertEquals(Assert.java:107)\n",
          "\tat junit.framework.TestCase.assertEquals(TestCase.java:260)\n",
          "\tat com.google.gson.stream.JsonWriterTest.testIssue108AutoGen(JsonWriterTest.java:745)\n"
        ],
        "exception_type": "junit.framework.ComparisonFailure",
        "value_matching": "expected:<3.72337[9]> but was:<3.72337[8896713257]>",
        "failure_message": "junit.framework.ComparisonFailure: expected:<3.72337[9]> but was:<3.72337[8896713257]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n16_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue108AutoGen"
    },
    "google_gson_2130_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterFloatAutoGen"
    },
    "google_gson_2130_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatValueAutoGen"
    },
    "google_gson_2130_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testJsonWriterAutoGen"
    },
    "google_gson_2130_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testIssue108AutoGen"
    },
    "google_gson_2130_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.GsonTest#test_writeFloatAutoGen"
    },
    "google_gson_2130_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n2_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2130/google_gson_2130_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.stream.JsonWriterTest#testFloatAutoGen"
    }
  },
  "google_gson-2134": {
    "google_gson_2134_markdown_n32": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n32_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue108AutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n32_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testIssue108AutoGen"
    },
    "google_gson_2134_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n32_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue108AutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n32_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testIssue108AutoGen"
    },
    "google_gson_2134_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n6_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testNonExistentDateAutoGen(ISO8601UtilsTest.java:98)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n6_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n19": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue121AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n19_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue121AutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n19_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testIssue121AutoGen"
    },
    "google_gson_2134_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n38": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n42": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n22": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testDateParseNonExistentDateAutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen(DefaultDateTypeAdapterTest.java:224)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssueAutoGen"
    },
    "google_gson_2134_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen(DefaultDateTypeAdapterTest.java:224)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssueAutoGen"
    },
    "google_gson_2134_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen(DefaultDateTypeAdapterTest.java:224)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssueAutoGen"
    },
    "google_gson_2134_markdown_n39": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen(DefaultDateTypeAdapterTest.java:224)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssueAutoGen"
    },
    "google_gson_2134_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssueAutoGen(DefaultDateTypeAdapterTest.java:224)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n37_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssueAutoGen"
    },
    "google_gson_2134_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2134_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2134_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2134_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue107AutoGen"
    },
    "google_gson_2134_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssue124AutoGen"
    },
    "google_gson_2134_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n8": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.JsonParserTest.testIssue198AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n8_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.JsonParserTest.testIssue198AutoGen(JsonParserTest.java:125)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n8_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.JsonParserTest#testIssue198AutoGen"
    },
    "google_gson_2134_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue108AutoGen"
    },
    "google_gson_2134_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue108AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n33_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Should've thrown exception\n",
          "\tat org.junit.Assert.fail(Assert.java:89)\n",
          "\tat com.google.gson.internal.bind.util.ISO8601UtilsTest.testIssue108AutoGen(ISO8601UtilsTest.java:100)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n33_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testIssue108AutoGen"
    },
    "google_gson_2134_markdown_n27": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.functional.DefaultTypeAdaptersTest.testIssue201AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n27_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Expected: <null> but was: Thu Mar 02 00:00:00 PST 2023\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.Assert.assertTrue(Assert.java:22)\n",
          "\tat junit.framework.Assert.assertNull(Assert.java:277)\n",
          "\tat junit.framework.Assert.assertNull(Assert.java:268)\n",
          "\tat junit.framework.TestCase.assertNull(TestCase.java:410)\n",
          "\tat com.google.gson.functional.DefaultTypeAdaptersTest.testIssue201AutoGen(DefaultTypeAdaptersTest.java:696)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": "Expected: <null> but was: Thu Mar 02 00:00:00 PST 2023",
        "failure_message": "junit.framework.AssertionFailedError: Expected: <null> but was: Thu Mar 02 00:00:00 PST 2023"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n27_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue201AutoGen"
    },
    "google_gson_2134_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.functional.DefaultTypeAdaptersTest#testIssue16AutoGen"
    },
    "google_gson_2134_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssue123AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssue123AutoGen(DefaultDateTypeAdapterTest.java:224)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n49_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssue123AutoGen"
    },
    "google_gson_2134_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssue142AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "junit.framework.AssertionFailedError: Should've thrown exception\n",
          "\tat junit.framework.Assert.fail(Assert.java:57)\n",
          "\tat junit.framework.TestCase.fail(TestCase.java:223)\n",
          "\tat com.google.gson.internal.bind.DefaultDateTypeAdapterTest.testIssue142AutoGen(DefaultDateTypeAdapterTest.java:223)\n"
        ],
        "exception_type": "junit.framework.AssertionFailedError",
        "value_matching": null,
        "failure_message": "junit.framework.AssertionFailedError: Should've thrown exception"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n23_fixed.txt"
      },
      "success": true,
      "injected_test": "com.google.gson.internal.bind.DefaultDateTypeAdapterTest#testIssue142AutoGen"
    },
    "google_gson_2134_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testDateParseNonExistentDateAutoGen"
    },
    "google_gson_2134_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/google_gson/2134/google_gson_2134_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.google.gson.internal.bind.util.ISO8601UtilsTest#testIssueAutoGen"
    }
  },
  "assertj_assertj-core-2324": {
    "assertj_assertj-core_2324_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testDefaultMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n9_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting\n",
          "  org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.HasDefaultImpl\n",
          "to have methods:\n",
          "  [\"method\"]\n",
          "but could not find:\n",
          "  [\"method\"]\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Classes.doAssertHasMethods(Classes.java:468)\n",
          "\tat org.assertj.core.internal.Classes.assertHasMethods(Classes.java:438)\n",
          "\tat org.assertj.core.api.AbstractClassAssert.hasMethods(AbstractClassAssert.java:592)\n",
          "\tat org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.testDefaultMethodAutoGen(ObjectArrayAssert_extracting_Test.java:489)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n9_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testDefaultMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue880AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue843AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue113AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.ArrayWrapperList_size_Test#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testDefaultMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testIssue880AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasDefaultMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasDefaultMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testDefaultMethodsAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n46": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n46_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting\n",
          "  org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.ClassWithDefaultMethod\n",
          "to have methods:\n",
          "  [\"method\"]\n",
          "but could not find:\n",
          "  [\"method\"]\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Classes.doAssertHasMethods(Classes.java:468)\n",
          "\tat org.assertj.core.internal.Classes.assertHasMethods(Classes.java:438)\n",
          "\tat org.assertj.core.api.AbstractClassAssert.hasMethods(AbstractClassAssert.java:592)\n",
          "\tat org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.testMethodAutoGen(ObjectArrayAssert_extracting_Test.java:489)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue880AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n2_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testIssue964AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue293AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue293AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue293AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testDefaultMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testIssue108AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue1086AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n7_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.introspection.PropertySupport_propertyValues_Test#testIssue872AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testIssue880AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethodsAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testHasMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testHasDefaultMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting\n",
          "  org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.MyClass\n",
          "to have methods:\n",
          "  [\"method\"]\n",
          "but could not find:\n",
          "  [\"method\"]\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Classes.doAssertHasMethods(Classes.java:468)\n",
          "\tat org.assertj.core.internal.Classes.assertHasMethods(Classes.java:438)\n",
          "\tat org.assertj.core.api.AbstractClassAssert.hasMethods(AbstractClassAssert.java:592)\n",
          "\tat org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.testHasDefaultMethodAutoGen(ObjectArrayAssert_extracting_Test.java:489)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n3_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testHasDefaultMethodAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.TypeComparators_hasComparator_Test#testIssueAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.test.TypeCanonizerTest#testDefaultMethodsAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassHasDefaultMethodsAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting\n",
          "  org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.MyClass\n",
          "to have methods:\n",
          "  [\"defaultMethod\"]\n",
          "but could not find:\n",
          "  [\"defaultMethod\"]\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Classes.doAssertHasMethods(Classes.java:468)\n",
          "\tat org.assertj.core.internal.Classes.assertHasMethods(Classes.java:438)\n",
          "\tat org.assertj.core.api.AbstractClassAssert.hasMethods(AbstractClassAssert.java:592)\n",
          "\tat org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.testClassHasDefaultMethodsAutoGen(ObjectArrayAssert_extracting_Test.java:489)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n23_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testClassHasDefaultMethodsAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testHasMethods_defaultAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue1211AutoGen"
    },
    "assertj_assertj-core_2324_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testClasses_hasMethod_should_not_fail_if_method_is_default_method_inherited_from_parent_interfaceAutoGen"
    },
    "assertj_assertj-core_2324_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testDefaultMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n11_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting\n",
          "  org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.HasDefaultImpl\n",
          "to have methods:\n",
          "  [\"method\"]\n",
          "but could not find:\n",
          "  [\"method\"]\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Classes.doAssertHasMethods(Classes.java:468)\n",
          "\tat org.assertj.core.internal.Classes.assertHasMethods(Classes.java:438)\n",
          "\tat org.assertj.core.api.AbstractClassAssert.hasMethods(AbstractClassAssert.java:592)\n",
          "\tat org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test.testDefaultMethodAutoGen(ObjectArrayAssert_extracting_Test.java:489)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2324/assertj_assertj-core_2324_markdown_n11_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testDefaultMethodAutoGen"
    }
  },
  "assertj_assertj-core-2364": {
    "assertj_assertj-core_2364_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testJava17OptionalAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testJava17OptionalAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssueAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssueAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testFieldOnOptionalAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testExtractingAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue82AutoGen"
    },
    "assertj_assertj-core_2364_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testExtractingAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.BDDSoftAssertionsTest#testIssueAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.BDDSoftAssertionsTest#testIssueAutoGen"
    },
    "assertj_assertj-core_2364_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2364/assertj_assertj-core_2364_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue107_2AutoGen"
    }
  },
  "assertj_assertj-core-2445": {
    "assertj_assertj-core_2445_markdown_n6": "[error] JavaSyntaxError('')",
    "assertj_assertj-core_2445_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n24_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testIssue116AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.test.jdk11.ImmutableCollections#testIssueAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#test_issueAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n29_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  not null\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test.A\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.Assertions_assertThat_with_Stream_Test.testIsExactlyInstanceOfAutoGen(Assertions_assertThat_with_Stream_Test.java:195)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.abstract_.AbstractAssert_satisfiesAnyOf_ThrowingConsumers_Test#testAnonymousInnerClassAsInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.BDDSoftAssertionsTest#testIssue108AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAnonymusInnerClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n31_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test$1@506ae4d4\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test.A\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.Assertions_assertThat_with_Stream_Test.testIsExactlyInstanceOfAnonymusInnerClassAutoGen(Assertions_assertThat_with_Stream_Test.java:198)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAnonymusInnerClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIsExactlyInstanceOfAnonymusInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testAnonymousInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.FloatComparatorTest#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOf_anonymous_classAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n10_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting throwable message:\n",
          "  \"\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.SoftAssertionsTest$6@350aac89\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.SoftAssertionsTest.A\n",
          "but was an instance of:\n",
          "  null\"\n",
          "to contain:\n",
          "  \"anonymous class\"\n",
          "but did not.\n",
          "\n",
          "Throwable that failed the check:\n",
          "\n",
          "java.lang.AssertionError: \n",
          "Expecting actual:\n",
          "  org.assertj.core.api.SoftAssertionsTest$6@350aac89\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.SoftAssertionsTest.A\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.SoftAssertionsTest.testIsExactlyInstanceOf_anonymous_classAutoGen(SoftAssertionsTest.java:2617)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n10_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIsExactlyInstanceOf_anonymous_classAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAnonymousInnerClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n36_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.SoftAssertionsTest$5@742ff096\n",
          "to be exactly an instance of:\n",
          "  null\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.SoftAssertionsTest.testIsExactlyInstanceOfAnonymousInnerClassAutoGen(SoftAssertionsTest.java:2611)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAnonymousInnerClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIsExactlyInstanceOfAnonymousInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testBugAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testAnonymousInnerClassesAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAnonymousInnerClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n30_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.presentation.StandardRepresentation_toStringOf_Test$A$1@2eae8e6e\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.presentation.StandardRepresentation_toStringOf_Test.A\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.presentation.StandardRepresentation_toStringOf_Test.testAnonymousInnerClassAutoGen(StandardRepresentation_toStringOf_Test.java:565)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAnonymousInnerClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testAnonymousInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n3_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n3_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssueAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n7_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.DeepDifference_Test#testIsExactlyInstanceOfFailsWithAnonymousInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.WithAssertions_delegation_Test#testIsExactlyInstanceOfAnonymousInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n28_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test$1@7d4f9aae\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test.A\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.Assertions_assertThat_with_Stream_Test.testIsExactlyInstanceOfAutoGen(Assertions_assertThat_with_Stream_Test.java:203)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.abstract_.AbstractAssert_satisfiesAnyOf_ThrowingConsumers_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testAssertionErrorWithAnonymousInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n0_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.recursive.comparison.RecursiveComparisonAssert_isEqualTo_strictTypeCheck_Test$1D$1@28d6290\n",
          "to be exactly an instance of:\n",
          "  null\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.recursive.comparison.RecursiveComparisonAssert_isEqualTo_strictTypeCheck_Test.testIsExactlyInstanceOfAutoGen(RecursiveComparisonAssert_isEqualTo_strictTypeCheck_Test.java:201)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.recursive.comparison.RecursiveComparisonAssert_isEqualTo_strictTypeCheck_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n25": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n25_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Iterator_Test$X$1@4efac082\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Iterator_Test.A\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.Assertions_assertThat_with_Iterator_Test.testIssueAutoGen(Assertions_assertThat_with_Iterator_Test.java:161)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Iterator_Test#testIssueAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testIsExactlyInstanceOfAnonymousAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.abstract_.AbstractAssert_satisfiesAnyOf_ThrowingConsumers_Test#testAnonymousClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n13_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual not to be null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertNotNull(Objects.java:384)\n",
          "\tat org.assertj.core.api.AbstractAssert.isNotNull(AbstractAssert.java:381)\n",
          "\tat org.assertj.core.api.Assertions_assertThat_with_Stream_Test.testIssue107AutoGen(Assertions_assertThat_with_Stream_Test.java:195)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n45_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test$A$1@54e1c68b\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test.A\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.Assertions_assertThat_with_Stream_Test.testIsExactlyInstanceOfAutoGen(Assertions_assertThat_with_Stream_Test.java:196)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssueAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testExactlyInstanceOfAnonymousInnerClassAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.recursive.comparison.RecursiveComparisonAssert_isEqualTo_strictTypeCheck_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2445_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.perf.SoftAssertionsPerfTest#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.objectarray.ObjectArrayAssert_extracting_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.DeepDifference_Test#testAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.DeepDifference_Test#testIssueAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n2_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test$X$1@7d4f9aae\n",
          "to be exactly an instance of:\n",
          "  org.assertj.core.api.Assertions_assertThat_with_Stream_Test.Provider\n",
          "but was an instance of:\n",
          "  null\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Objects.assertIsExactlyInstanceOf(Objects.java:262)\n",
          "\tat org.assertj.core.api.AbstractAssert.isExactlyInstanceOf(AbstractAssert.java:541)\n",
          "\tat org.assertj.core.api.Assertions_assertThat_with_Stream_Test.testIsExactlyInstanceOfAutoGen(Assertions_assertThat_with_Stream_Test.java:195)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIsExactlyInstanceOfAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testIsExactlyInstanceOfAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.Assertions_assertThat_with_Stream_Test#testAutoGen"
    },
    "assertj_assertj-core_2445_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2445/assertj_assertj-core_2445_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue107AutoGen"
    }
  },
  "assertj_assertj-core-2549": {
    "assertj_assertj-core_2549_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testRegressionAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testRegressionAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testRegressionAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testRegressionAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testRegressionAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n28_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#test_issueAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue929AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testIssue929AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.introspection.PropertyOrFieldSupport_getValueOf_Test#testRegressionInAbstractMapAssertContainsOnlyKeysWithSpringSMultiValueMapAdapterAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n38": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testIssue107AutoGen"
    },
    "assertj_assertj-core_2549_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_toStringOf_Test#testMapRemoveAutoGen"
    },
    "assertj_assertj-core_2549_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2549/assertj_assertj-core_2549_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.DeepDifference_Test#testRegressionInAbstractMapAssertContainsOnlyKeysWithSpringMultiValueMapAdapterAutoGen"
    }
  },
  "assertj_assertj-core-2685": {
    "assertj_assertj-core_2685_markdown_n33": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "assertj_assertj-core_2685_markdown_n27": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "assertj_assertj-core_2685_markdown_n35": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "assertj_assertj-core_2685_markdown_n34": "[error] JavaSyntaxError('')",
    "assertj_assertj-core_2685_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n21": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testAssertContainsIgnoringCase_TurkishLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n39": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n39_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting code to raise a throwable.\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.api.AbstractThrowableAssert.hasBeenThrown(AbstractThrowableAssert.java:53)\n",
          "\tat org.assertj.core.api.Assertions.assertThatThrownBy(Assertions.java:1210)\n",
          "\tat org.assertj.core.api.SoftAssertionsTest.testAssertContainsIgnoringCaseAutoGen(SoftAssertionsTest.java:2696)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.presentation.StandardRepresentation_unambiguousToStringOf_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.classes.Classes_assertHasDeclaredMethods_Test#testContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue2604AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n5_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "[Assert should not fail in TR locale] \n",
          "Expecting actual:\n",
          "  \"i\u0307\"\n",
          "to contain:\n",
          "  \"I\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.api.BDDSoftAssertionsTest.testAssertContainsIgnoringCaseAutoGen(BDDSoftAssertionsTest.java:1995)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n5_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.api.BDDSoftAssertionsTest#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n19": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "test_containsIgnoringCase_with_tr_localeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n19_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"\u0130zmir\"\n",
          "to contain:\n",
          "  \"izmIr\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test.test_containsIgnoringCase_with_tr_localeAutoGen(XmlStringPrettyFormatter_prettyFormat_Test.java:108)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n19_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#test_containsIgnoringCase_with_tr_localeAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n48_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"i\"\n",
          "to contain:\n",
          "  \"I\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test.testIssue107AutoGen(XmlStringPrettyFormatter_prettyFormat_Test.java:104)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n48_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n42": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n42_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"\u0130\"\n",
          "to contain:\n",
          "  \"i\" \n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContains(Strings.java:478)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.contains(AbstractCharSequenceAssert.java:660)\n",
          "\tat org.assertj.core.internal.objects.Objects_assertIsEqualToIgnoringGivenFields_Test.testAssertContainsIgnoringCaseAutoGen(Objects_assertIsEqualToIgnoringGivenFields_Test.java:293)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.objects.Objects_assertIsEqualToIgnoringGivenFields_Test#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue952AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n1_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "[Checking in tr_TR locale] \n",
          "Expecting actual:\n",
          "  \"I\"\n",
          "to contain:\n",
          "  \"i\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.api.SoftAssertionsTest.testIssue952AutoGen(SoftAssertionsTest.java:2695)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n1_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue952AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseFailsToCompareIAndIInTr_TRLocaleAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n6_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting code to raise a throwable.\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.api.AbstractThrowableAssert.hasBeenThrown(AbstractThrowableAssert.java:53)\n",
          "\tat org.assertj.core.api.Assertions.assertThatThrownBy(Assertions.java:1210)\n",
          "\tat org.assertj.core.api.BDDSoftAssertionsTest.testAssertContainsIgnoringCaseFailsToCompareIAndIInTr_TRLocaleAutoGen(BDDSoftAssertionsTest.java:1990)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseFailsToCompareIAndIInTr_TRLocaleAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.BDDSoftAssertionsTest#testAssertContainsIgnoringCaseFailsToCompareIAndIInTr_TRLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.extractor.ByNameSingleExtractorTest#testAssertContainsIgnoringCase_should_fail_if_actual_does_not_contain_given_string_according_to_custom_comparison_strategyAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n26": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue110AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n8": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue110AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue345AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n7_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "\n",
          "expected: \"I\"\n",
          " but was: \"\u0130\"\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": null,
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue345AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue345AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n47": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseTrAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n47_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "\n",
          "expected: \"T\u00fcrk\u00e7e\"\n",
          " but was: \"Turkish\"\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": null,
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseTrAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testAssertContainsIgnoringCaseTrAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n38": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testAssertContainsIgnoringCaseTrTrLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n28_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"\u0130stanbul\"\n",
          "to contain:\n",
          "  \"istanbul\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.example.custom.SoftAssertionsErrorDescriptionTest.testAssertContainsIgnoringCaseAutoGen(SoftAssertionsErrorDescriptionTest.java:43)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n28_fixed.txt"
      },
      "success": true,
      "injected_test": "org.example.custom.SoftAssertionsErrorDescriptionTest#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n24_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.BDDSoftAssertionsTest#testLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.recursive.comparison.RecursiveComparisonAssert_isEqualTo_with_iterables_Test#testAssertContainsIgnoringCase_tr_TRAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testIssueAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n18": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertionInTrTrLocaleAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"\u0130\u0130\"\n",
          "to contain:\n",
          "  \"iI\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test.testAssertionInTrTrLocaleAutoGen(XmlStringPrettyFormatter_prettyFormat_Test.java:104)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n18_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testAssertionInTrTrLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.assumptions.Assumptions_assumeThat_with_various_types_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.FolderFixture#testContainsIgnoringCaseWhenAlreadyLowerCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n17_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"\u0130\"\n",
          "to contain:\n",
          "  \"I\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test.testAssertContainsIgnoringCaseAutoGen(XmlStringPrettyFormatter_prettyFormat_Test.java:104)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n17_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n32": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testStringContainsIgnoreCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testIssue2664AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.strings.Strings_assertEqualsIgnoringCase_Test#testContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testIssue2664AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssueAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testIssue40AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue107AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n44_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"I\"\n",
          "to contain:\n",
          "  \"i\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test.testIssue107AutoGen(XmlStringPrettyFormatter_prettyFormat_Test.java:104)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n44_fixed.txt"
      },
      "success": true,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testIssue107AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testAssertContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.introspection.PropertySupport_publicGetterExistsFor_Test#testLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n3_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n3_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.condition.MatchPredicateTest#testAssertionErrorTrTRLocaleAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCase_i_IAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n31_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: \n",
          "\n",
          "Expecting message to be:\n",
          "  \"\n",
          "Expecting: <\"K\">\n",
          "to contain: <\"I\"> ignoring case\"\n",
          "but was:\n",
          "  \"\n",
          "Expecting actual:\n",
          "  \"K\"\n",
          "to contain:\n",
          "  \"I\"\n",
          " (ignoring case)\"\n",
          "\n",
          "Throwable that failed the check:\n",
          "\n",
          "java.lang.AssertionError: \n",
          "Expecting actual:\n",
          "  \"K\"\n",
          "to contain:\n",
          "  \"I\"\n",
          " (ignoring case)\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertContainsIgnoringCase(Strings.java:532)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.containsIgnoringCase(AbstractCharSequenceAssert.java:842)\n",
          "\tat org.assertj.core.internal.throwables.Throwables_assertHasSuppressedException_Test.lambda$testAssertContainsIgnoringCase_i_IAutoGen$7(Throwables_assertHasSuppressedException_Test.java:128)\n",
          "\tat org.assertj.core.api.ThrowableAssert.catchThrowable(ThrowableAssert.java:63)\n",
          "\tat org.assertj.core.api.ThrowableTypeAssert.isThrownBy(ThrowableTypeAssert.java:59)\n",
          "\tat org.assertj.core.internal.throwables.Throwables_assertHasSuppressedException_Test.testAssertContainsIgnoringCase_i_IAutoGen(Throwables_assertHasSuppressedException_Test.java:128)\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": null,
        "failure_message": "org.opentest4j.AssertionFailedError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAssertContainsIgnoringCase_i_IAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.internal.throwables.Throwables_assertHasSuppressedException_Test#testAssertContainsIgnoringCase_i_IAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.scripts.ShellScriptInvoker#testContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n2_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.api.SoftAssertionsTest#testIssue2663AutoGen"
    },
    "assertj_assertj-core_2685_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n13_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: \n",
          "\n",
          "Expecting actual:\n",
          "  \"MERHABA\"\n",
          "not to contain (ignoring case):\n",
          "  \"merhab\"\n",
          "\n",
          "\tat org.assertj.core.error.AssertionErrorCreator.assertionError(AssertionErrorCreator.java:93)\n",
          "\tat org.assertj.core.internal.Failures.failure(Failures.java:126)\n",
          "\tat org.assertj.core.internal.Strings.assertDoesNotContainIgnoringCase(Strings.java:601)\n",
          "\tat org.assertj.core.api.AbstractCharSequenceAssert.doesNotContainIgnoringCase(AbstractCharSequenceAssert.java:969)\n",
          "\tat org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test.testContainsIgnoringCaseAutoGen(XmlStringPrettyFormatter_prettyFormat_Test.java:106)\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testContainsIgnoringCaseAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.util.xml.XmlStringPrettyFormatter_prettyFormat_Test#testContainsIgnoringCaseAutoGen"
    },
    "assertj_assertj-core_2685_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/assertj_assertj-core/2685/assertj_assertj-core_2685_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "org.assertj.core.test.CaseInsensitiveStringComparatorTest#testAssertContainsIgnoringCase_with_tr_TR_localeAutoGen"
    }
  },
  "checkstyle_checkstyle-10839": {
    "checkstyle_checkstyle_10839_markdown_n37": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_10839_markdown_n28": "[error] LexerError('Unterminated character/string literal at \"\"\", line 16: assertEquals(\"java.io')",
    "checkstyle_checkstyle_10839_markdown_n18": "[error] StopIteration()",
    "checkstyle_checkstyle_10839_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n40_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testIssue109AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n45_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/FanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/FanOutComplexity.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.grammar.comments.AllBlockCommentsTest.testFanOutComplexityAutoGen(AllBlockCommentsTest.java:117)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  AllBlockCommentsTest.testFanOutComplexityAutoGen:117->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/FanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/FanOutComplexity.java (No such file or directory)\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.449 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:46:09+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/FanOutComplexity.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/FanOutComplexity.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.grammar.comments.AllBlockCommentsTest#testFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n46_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n5_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n0_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 7:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:332)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen:332->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 7:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  16.524 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:47:02+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 7:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 7:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n48_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n39_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n27_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testIssue116AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n38_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n6_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testMultiCatchAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n19_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n12_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n14_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testCatchMultiAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 13:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:331)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen:331->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 13:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  28.554 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:51:00+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 13:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 13:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n16_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n42_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFanOutAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n24_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:331)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen:331->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  26.187 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:52:47+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n29_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.grammar.comments.AllBlockCommentsTest#testIssueTestAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n22_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFanOutComplexityTwoAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n26": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testMulticatchAndImplementsAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n26_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testMulticatchAndImplementsAutoGen(ClassFanOutComplexityCheckTest.java:333)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testMulticatchAndImplementsAutoGen:333->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.375 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:53:54+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testMulticatchAndImplementsAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testMulticatchAndImplementsAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n32": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testMulticatchAndImplementsAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n26_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testMulticatchAndImplementsAutoGen(ClassFanOutComplexityCheckTest.java:333)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testMulticatchAndImplementsAutoGen:333->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.375 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:53:54+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testMulticatchAndImplementsAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testMulticatchAndImplementsAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n35_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:331)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen:331->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  16.264 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:54:14+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue138AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n36_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "missing (1)   : 1:1: Class Fan-Out Complexity is 4 (max allowed is 0).\n",
          "unexpected (2): 27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).\n",
          "---\n",
          "expected      : [1:1: Class Fan-Out Complexity is 4 (max allowed is 0).]\n",
          "but was       : [27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testIssue138AutoGen(ClassFanOutComplexityCheckTest.java:331)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testIssue138AutoGen:331->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "missing (1)   : 1:1: Class Fan-Out Complexity is 4 (max allowed is 0).\n",
          "unexpected (2): 27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).\n",
          "---\n",
          "expected      : [1:1: Class Fan-Out Complexity is 4 (max allowed is 0).]\n",
          "but was       : [27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).]\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.036 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:54:33+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue138AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testIssue138AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:331)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testFanOutComplexityAutoGen:331->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.816 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:54:53+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 1:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n13_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of   : keySet()\n",
          "missing (1): /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java\n",
          "---\n",
          "expected   : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java]\n",
          "but was    : []\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:330)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen:330->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:375 Files with expected violations and actual violations differ.\n",
          "value of   : keySet()\n",
          "missing (1): /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java\n",
          "---\n",
          "expected   : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java]\n",
          "but was    : []\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  16.294 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:55:13+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n8_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testMultipleCatchAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n4_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityCliAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n15_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testClassFanOutComplexityCliAutoGen(ClassFanOutComplexityCheckTest.java:332)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testClassFanOutComplexityCliAutoGen:332->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.785 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:56:04+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityCliAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityCliAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n21": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEvaluatorForClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n21_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "missing (1)   : 1:1: Class Fan-Out Complexity is 1 (max allowed is 0).\n",
          "unexpected (2): 27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).\n",
          "---\n",
          "expected      : [1:1: Class Fan-Out Complexity is 1 (max allowed is 0).]\n",
          "but was       : [27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testEvaluatorForClassFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:333)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testEvaluatorForClassFanOutComplexityAutoGen:333->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "missing (1)   : 1:1: Class Fan-Out Complexity is 1 (max allowed is 0).\n",
          "unexpected (2): 27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).\n",
          "---\n",
          "expected      : [1:1: Class Fan-Out Complexity is 1 (max allowed is 0).]\n",
          "but was       : [27:1: Class Fan-Out Complexity is 3 (max allowed is 0)., 59:1: Class Fan-Out Complexity is 1 (max allowed is 0).]\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  16.666 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:56:24+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEvaluatorForClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testEvaluatorForClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n17_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/InputClassFanOut.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/InputClassFanOut.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.grammar.comments.AllBlockCommentsTest.testFanOutComplexityAutoGen(AllBlockCommentsTest.java:118)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  AllBlockCommentsTest.testFanOutComplexityAutoGen:118->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/InputClassFanOut.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/InputClassFanOut.java (No such file or directory)\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.599 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:56:43+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/InputClassFanOut.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/grammar/comments/InputClassFanOut.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.grammar.comments.AllBlockCommentsTest#testFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.api.FullIdentTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n31_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n2_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue100AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n30_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testIssue100AutoGen(ClassFanOutComplexityCheckTest.java:331)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testIssue100AutoGen:331->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.432 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:57:50+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue100AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testIssue100AutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n25_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.PropertyCacheFileTest#testAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n11_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 4:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen(ClassFanOutComplexityCheckTest.java:334)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  ClassFanOutComplexityCheckTest.testClassFanOutComplexityAutoGen:334->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/classfanoutcomplexity/InputClassFanOutComplexity.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 4:1: Class Fan-Out Complexity is 4 (max allowed is 1).\n",
          "but was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.190 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:58:24+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 4:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 4:1: Class Fan-Out Complexity is 4 (max allowed is 1).\nbut was : 27:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n20_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassFanOutComplexityCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassFanOutComplexityCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest.testClassFanOutComplexityAutoGen(RegexpMultilineCheckTest.java:275)\n",
          "\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] Results:\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mFailures: \u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m  RegexpMultilineCheckTest.testClassFanOutComplexityAutoGen:275->AbstractModuleTestSupport.verify:287->AbstractModuleTestSupport.verify:325->AbstractModuleTestSupport.verify:347->AbstractModuleTestSupport.verify:377->AbstractModuleTestSupport.lambda$verify$1:380 Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassFanOutComplexityCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassFanOutComplexityCheck.java (No such file or directory)\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mTests run: 1, Failures: 1, Errors: 0, Skipped: 0\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1;31mBUILD FAILURE\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;34mINFO\u001b[m] Total time:  15.088 s\n",
          "[\u001b[1;34mINFO\u001b[m] Finished at: 2022-08-16T19:58:43+09:00\n",
          "[\u001b[1;34mINFO\u001b[m] \u001b[1m------------------------------------------------------------------------\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] Failed to execute goal \u001b[32morg.apache.maven.plugins:maven-surefire-plugin:2.22.2:test\u001b[m \u001b[1m(default-test)\u001b[m on project \u001b[36mcheckstyle\u001b[m: \u001b[1;31mThere are test failures.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31m\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/target/surefire-reports for the individual test results.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1;31mPlease refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] -> \u001b[1m[Help 1]\u001b[m\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] To see the full stack trace of the errors, re-run Maven with the \u001b[1m-e\u001b[m switch.\n",
          "[\u001b[1;31mERROR\u001b[m] Re-run Maven using the \u001b[1m-X\u001b[m switch to enable full debug logging.\n",
          "[\u001b[1;31mERROR\u001b[m] \n",
          "[\u001b[1;31mERROR\u001b[m] For more information about the errors and possible solutions, please read the following articles:\n",
          "[\u001b[1;31mERROR\u001b[m] \u001b[1m[Help 1]\u001b[m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassFanOutComplexityCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 6:1: Class Fan-Out Complexity is 3 (max allowed is 1).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassFanOutComplexityCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testClassFanOutComplexityAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest#testClassFanOutComplexityAutoGen"
    },
    "checkstyle_checkstyle_10839_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10839/checkstyle_checkstyle_10839_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testFanOutComplexityAutoGen"
    }
  },
  "checkstyle_checkstyle-10825": {
    "checkstyle_checkstyle_10825_markdown_n25": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10825_markdown_n44": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10825_markdown_n39": "[error] LexerError('Unterminated character/string literal at \" \", line 10: + \"+ \\\\\" \\\\\" + \\\\\" \\\\\" + \\\\\" \\\\\" + \\\\\" \\\\\" + \\\\\" \\\\\" + \\\\\" \\\\\" + \\\\\" \\\\\" + \\\\\" \\\\')",
    "checkstyle_checkstyle_10825_markdown_n23": "[error] LexerError('Unterminated character/string literal at \" \", line 13: + \"+ \\\\\" \\\\\" + \\\\\" \\\\\" + \\\\\" \\\\\"')",
    "checkstyle_checkstyle_10825_markdown_n16": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_10825_markdown_n36": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10825_markdown_n38": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_10825_markdown_n41": "[error] LexerError('Unterminated character/string literal at \"\\n\", line 8: ')",
    "checkstyle_checkstyle_10825_markdown_n4": "[error] StopIteration()",
    "checkstyle_checkstyle_10825_markdown_n2": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10825_markdown_n15": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10825_markdown_n11": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10825_markdown_n17": "[error] LexerError('Unterminated character/string literal at \" \", line 7: \" \" + \" \" + \" \" + \" \" + \" \" + \" \" + \" \" + \" \" + \" \" +')",
    "checkstyle_checkstyle_10825_markdown_n34": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_10825_markdown_n31": "[error] LexerError('Unterminated character/string literal at \" \", line 7: \" \" + \" \" + \" \" + \" \" + \" \" + \" \" + \" \" + \" \" + \" \" +')",
    "checkstyle_checkstyle_10825_markdown_n3": "[error] LexerError('Unterminated character/string literal at \" \", line 11: \" + \" + s + \" + \" + s + \" + \" + s + \" + \" + s +')",
    "checkstyle_checkstyle_10825_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.CheckUtilTest#testStackOverflowAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest#testStackOverflowAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest#testStackOverflowAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testStackOverflowAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testStackOverflowAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testStackOverflowOccursAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.DetailAstImplTest#testDeeplyConcatenatedStringsAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testStackOverflowAutoGen"
    },
    "checkstyle_checkstyle_10825_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10825/checkstyle_checkstyle_10825_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testIndentationCheckAutoGen"
    }
  },
  "checkstyle_checkstyle-10840": {
    "checkstyle_checkstyle_10840_markdown_n7": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_10840_markdown_n21": "[error] LexerError('Unterminated character/string literal at \" \", line 16: checkConfig.addAttribute(\"accessModifiers\", \"publi')",
    "checkstyle_checkstyle_10840_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testInterfaceInnerClassAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n14": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathQueryGeneratorTest#testIssue0AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testInnerClassAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testCheckJavadocMethod_innerClass_hasPublicMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n44_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/javadoc/InputJavadocMethodInnerClass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.powermock.RegexpOnFilenameCheckPowerTest.testCheckJavadocMethod_innerClass_hasPublicMethodAutoGen(RegexpOnFilenameCheckPowerTest.java:71)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testCheckJavadocMethod_innerClass_hasPublicMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.powermock.RegexpOnFilenameCheckPowerTest#testCheckJavadocMethod_innerClass_hasPublicMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.powermock.RegexpOnFilenameCheckPowerTest#testModifiersAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testInnerClassAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n28_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testPublicClassAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testJavadocMethodAccessModifiersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n12_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/InputJavadocMethodAccessModifiers.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest.testJavadocMethodAccessModifiersAutoGen(RegexpOnFilenameCheckTest.java:269)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testJavadocMethodAccessModifiersAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAccessModifiersAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest#testJavadocMethodAccessModifiersAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testIssue118AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssueJavadocMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n31_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/InputJavadocMethodCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 5: Missing a Javadoc comment.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/InputJavadocMethodCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest.testIssueJavadocMethodAutoGen(RegexpOnFilenameCheckTest.java:272)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 5: Missing a Javadoc comment.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/InputJavadocMethodCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 5: Missing a Javadoc comment.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/InputJavadocMethodCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssueJavadocMethodAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testIssueJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest#testIssue103AutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n24_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest#testJavadocMethod_accessModifiersAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testJavadocMethodAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testInterfaceAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest#testJavadocAccessModifiersAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.filters.XpathFilterElementTest#testAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testJavadocMethodAccessModifiersAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.powermock.RegexpOnFilenameCheckPowerTest#testClassInInterfaceAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n42": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.TokenUtilTest#testMyClassAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n3_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n3_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testJavadocMethodAccessModifiersAutoGen"
    },
    "checkstyle_checkstyle_10840_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10840/checkstyle_checkstyle_10840_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testMissingParamAutoGen"
    }
  },
  "checkstyle_checkstyle-10857": {
    "checkstyle_checkstyle_10857_markdown_n6": "[error] StopIteration()",
    "checkstyle_checkstyle_10857_markdown_n29": "[error] LexerError('Illegal escape character at \"_\", line 8: \"        \\\\\"http://www.puppycrawl.com/dtds/configuration\\\\_1\\\\_3.dtd\\\\\">\\\\n\" +')",
    "checkstyle_checkstyle_10857_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testUnusedImportsBugAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testUnusedImportsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest#testNumberUtilsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest#testNumberUtilsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testUnusedImportAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testUnusedImportsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testUnusedImportsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testUnusedImportsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testUnusedImportsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testUnusedImportAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n30": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsUrlTest#testUnusedImportBugAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testUnusedImportsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathQueryGeneratorTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testUnusedImportAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testUnusedImportsAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testUnusedImportAutoGen"
    },
    "checkstyle_checkstyle_10857_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10857/checkstyle_checkstyle_10857_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testUnusedImportAutoGen"
    }
  },
  "checkstyle_checkstyle-10963": {
    "checkstyle_checkstyle_10963_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullWithThisQualifierAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n7_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputEqualsAvoidNull.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testEqualsAvoidNullAutoGen(AllChecksTest.java:651)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest#testEqualsAvoidNullQualifierAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullWithThisQualifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n10_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/coding/InputEqualsAvoidNullWithThisQualifier.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 5: Duplicated property 'stringFromBaseClass' ({1} occurrence(s)).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/coding/InputEqualsAvoidNullWithThisQualifier.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest.testEqualsAvoidNullWithThisQualifierAutoGen(UniquePropertiesCheckTest.java:193)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 5: Duplicated property 'stringFromBaseClass' ({1} occurrence(s)).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/coding/InputEqualsAvoidNullWithThisQualifier.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 5: Duplicated property 'stringFromBaseClass' ({1} occurrence(s)).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/coding/InputEqualsAvoidNullWithThisQualifier.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullWithThisQualifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest#testEqualsAvoidNullWithThisQualifierAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n41": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n41_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 5:11: Line is longer than {0} characters (found {1}).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest.testEqualsAvoidNullAutoGen(LineLengthCheckTest.java:115)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 5:11: Line is longer than {0} characters (found {1}).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 5:11: Line is longer than {0} characters (found {1}).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest#testEqualsAvoidNullCheckAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n24": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n24_buggy.txt",
        "fib_error_msg": [
          "java.util.MissingResourceException: Can't find resource for bundle java.util.PropertyResourceBundle, key equalsAvoidNull\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest.testEqualsAvoidNullAutoGen(JavadocPackageCheckTest.java:171)\n",
          "\n"
        ],
        "exception_type": "java.util.MissingResourceException",
        "value_matching": null,
        "failure_message": "java.util.MissingResourceException: Can't find resource for bundle java.util.PropertyResourceBundle, key equalsAvoidNull"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n48_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullCheckAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testEqualsAvoidNullInBaseClassAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n27": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n27_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputEqualsAvoidNull.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testEqualsAvoidNullIssueAutoGen(AllChecksTest.java:649)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullIssueAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullIssueAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n28_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 7:20: Line is longer than {0} characters (found {1}).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest.testEqualsAvoidNullAutoGen(LineLengthCheckTest.java:115)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 7:20: Line is longer than {0} characters (found {1}).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 7:20: Line is longer than {0} characters (found {1}).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/InputEqualsAvoidNull.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullShouldNotThrowExceptionAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckWithThisAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n6_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNullDerived.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3: Duplicated property 'stringFromBaseClass' (equals occurrence(s)).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNullDerived.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest.testEqualsAvoidNullCheckWithThisAutoGen(UniquePropertiesCheckTest.java:193)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3: Duplicated property 'stringFromBaseClass' (equals occurrence(s)).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNullDerived.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3: Duplicated property 'stringFromBaseClass' (equals occurrence(s)).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNullDerived.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckWithThisAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest#testEqualsAvoidNullCheckWithThisAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testEqualsAvoidNullCheckAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testDerivedClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n29_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck - Property 'ignoreVariableNames' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest.testDerivedClassAutoGen(JavadocPackageCheckTest.java:175)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck - Property 'ignoreVariableNames' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest.testDerivedClassAutoGen(JavadocPackageCheckTest.java:175)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'ignoreVariableNames' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest.testDerivedClassAutoGen(JavadocPackageCheckTest.java:175)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck - Property 'ignoreVariableNames' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testDerivedClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testDerivedClassAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullCheckAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "java.lang.IllegalArgumentException: Cannot format given Object as a Number\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest.testEqualsAvoidNullAutoGen(LineLengthCheckTest.java:113)\n",
          "\n"
        ],
        "exception_type": "java.lang.IllegalArgumentException",
        "value_matching": null,
        "failure_message": "java.lang.IllegalArgumentException: Cannot format given Object as a Number"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n38": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n38_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/fsp/test/DerivedClass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testEqualsAvoidNullCheckAutoGen(AllChecksTest.java:651)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullCheckAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullNPEAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputEqualsAvoidNullNPE.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testEqualsAvoidNullNPEAutoGen(AllChecksTest.java:653)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullNPEAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullNPEAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.powermock.JavadocPackageCheckPowerTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n43_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck - Property 'ignoreStrutsEquals' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest.testEqualsAvoidNullAutoGen(IndentationCheckTest.java:3073)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck - Property 'ignoreStrutsEquals' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest.testEqualsAvoidNullAutoGen(IndentationCheckTest.java:3073)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'ignoreStrutsEquals' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest.testEqualsAvoidNullAutoGen(IndentationCheckTest.java:3073)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck - Property 'ignoreStrutsEquals' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullWithThisAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n45_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTestInput.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:55: String literal expressions should be on the left side of an equals comparison.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTestInput.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testEqualsAvoidNullWithThisAutoGen(AllChecksTest.java:650)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 6:55: String literal expressions should be on the left side of an equals comparison.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTestInput.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 6:55: String literal expressions should be on the left side of an equals comparison.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTestInput.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullWithThisAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullWithThisAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest#testNpeInEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullWithThisQualifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n40_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputEqualsAvoidNullWithThisQualifier.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testEqualsAvoidNullWithThisQualifierAutoGen(AllChecksTest.java:648)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullWithThisQualifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullWithThisQualifierAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n47": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n47_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/checks/coding/InputEqualsAvoidNullCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 13:9: Line is longer than {0} characters (found {1}).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/checks/coding/InputEqualsAvoidNullCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest.testEqualsAvoidNullCheckAutoGen(LineLengthCheckTest.java:115)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 13:9: Line is longer than {0} characters (found {1}).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/checks/coding/InputEqualsAvoidNullCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 13:9: Line is longer than {0} characters (found {1}).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/sizes/linelength/checks/coding/InputEqualsAvoidNullCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testEqualsAvoidNullCheckAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testEqualsAvoidNullCheckWithBaseClassFieldAccessAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n13_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNull.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3: Duplicated property 'stringFromBaseClass' ({1} occurrence(s)).\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNull.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest.testEqualsAvoidNullAutoGen(UniquePropertiesCheckTest.java:193)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3: Duplicated property 'stringFromBaseClass' ({1} occurrence(s)).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNull.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3: Duplicated property 'stringFromBaseClass' ({1} occurrence(s)).\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputEqualsAvoidNull.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest#testEqualsAvoidNullAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n19": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n19_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/translation/InputEqualsAvoidNullCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 4:9: Key 'stringFromBaseClass' missing.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/translation/InputEqualsAvoidNullCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest.testEqualsAvoidNullCheckAutoGen(TranslationCheckTest.java:660)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 4:9: Key 'stringFromBaseClass' missing.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/translation/InputEqualsAvoidNullCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 4:9: Key 'stringFromBaseClass' missing.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/translation/InputEqualsAvoidNullCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testEqualsAvoidNullCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest#testEqualsAvoidNullCheckAutoGen"
    },
    "checkstyle_checkstyle_10963_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n3_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10963/checkstyle_checkstyle_10963_markdown_n3_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testEqualsAvoidNullCheckAutoGen"
    }
  },
  "checkstyle_checkstyle-10967": {
    "checkstyle_checkstyle_10967_markdown_n39": "[error] StopIteration()",
    "checkstyle_checkstyle_10967_markdown_n20": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10967_markdown_n28": "[error] LexerError('Could not process token at \"`\", line 20: `')",
    "checkstyle_checkstyle_10967_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapWithTokenAssignAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapWithTokenAssignAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n12": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testOperatorWrapAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n12_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputOperatorWrap.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testOperatorWrapAutoGen(AllChecksTest.java:650)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testOperatorWrapAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testAssignAnnotationExampleAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolderTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolderTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testAnnotationAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testAnnotationAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest#testAnnotationAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testAnnotationAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue97AutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest#testAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n7_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.utils.BlockTagUtilTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testOperatorWrapAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/puppycrawl/tools/checkstyle/whitespace/InputOperatorWrap.java differ.\n",
          "missing (2)   : 1:21: '=' should be on a new line., 1:53: '=' should be on a new line.\n",
          "unexpected (1): 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/puppycrawl/tools/checkstyle/whitespace/InputOperatorWrap.java (No such file or directory)\n",
          "---\n",
          "expected      : [1:21: '=' should be on a new line., 1:53: '=' should be on a new line.]\n",
          "but was       : [1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/com/puppycrawl/tools/checkstyle/whitespace/InputOperatorWrap.java (No such file or directory)]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testOperatorWrapAutoGen(AllChecksTest.java:651)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testOperatorWrapAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n3_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapWithAnnotationAutoGen"
    },
    "checkstyle_checkstyle_10967_markdown_n26": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testOperatorWrapAnnotation_SameLineAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n26_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputOperatorWrapAnnotation.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testOperatorWrapAnnotation_SameLineAutoGen(AllChecksTest.java:650)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testOperatorWrapAnnotation_SameLineAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10967/checkstyle_checkstyle_10967_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testOperatorWrapAnnotation_SameLineAutoGen"
    }
  },
  "checkstyle_checkstyle-10958": {
    "checkstyle_checkstyle_10958_markdown_n42": "[error] LexerError('Unterminated character/string literal at \" \", line 12: + \"  <property name=\\\\\"memberModifiers\\\\\" value=\\\\\"(default)\\\\\"/>\\\\')",
    "checkstyle_checkstyle_10958_markdown_n25": "[error] LexerError('Unterminated character/string literal at \" \", line 24: .addAttribute(\"memberModifiers\", \"LITERAL_PUBLIC, LITERAL')",
    "checkstyle_checkstyle_10958_markdown_n0": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_10958_markdown_n13": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_10958_markdown_n10": "[error] LexerError('Unterminated character/string literal at \" \", line 15: checkConfig.addAttribute(\"memberModifiers\", \"LITERAL_PUBLIC, LITERAL_PROTECTED, LI')",
    "checkstyle_checkstyle_10958_markdown_n48": "[error] LexerError('Unterminated character/string literal at \" \", line 14: \"12:17: \" + getCheckMessage(MSG_KEY,')",
    "checkstyle_checkstyle_10958_markdown_n9": "[error] LexerError('Unterminated character/string literal at \" \", line 21: checkConfig.addAttribute(\"memberModifiers\",')",
    "checkstyle_checkstyle_10958_markdown_n31": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_10958_markdown_n47": "[error] LexerError('Unterminated character/string literal at \"\"\", line 18: checkConfig.addAttribute(\"memberModifier')",
    "checkstyle_checkstyle_10958_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIllegalTypeCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n34_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testIllegalTypeCheckAutoGen(IllegalTypeCheckTest.java:375)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIllegalTypeCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testIllegalTypeCheckAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n37": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n37_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Cannot set property 'memberModifiers' to 'RECORD_COMPONENT'\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Cannot set property 'memberModifiers' to 'RECORD_COMPONENT'\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Cannot set property 'memberModifiers' to 'RECORD_COMPONENT'\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "Caused by: java.lang.reflect.InvocationTargetException\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "Caused by: java.lang.IllegalArgumentException: unknown TokenTypes value 'RECORD_COMPONENT'\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Cannot set property 'memberModifiers' to 'RECORD_COMPONENT'"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n27": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue198AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n27_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'extendType' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testIssue198AutoGen(IllegalTypeCheckTest.java:383)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'extendType' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testIssue198AutoGen(IllegalTypeCheckTest.java:383)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'extendType' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testIssue198AutoGen(IllegalTypeCheckTest.java:383)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'extendType' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue198AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testIssue198AutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n40_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 6:5: Usage of type 'java.awt.Color' is not allowed.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:377)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 6:5: Usage of type 'java.awt.Color' is not allowed.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 6:5: Usage of type 'java.awt.Color' is not allowed.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n38_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n38_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testIllegalTypeCheckTestAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n7_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'legalMemberModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:377)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'legalMemberModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:377)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'legalMemberModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:377)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'legalMemberModifier' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n35_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputIllegalTypeTestInnerRecordsPass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:651)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIllegalTypeCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n43_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java differ.\n",
          "missing (2)   : 13:12: Illegal type: 'Record', 16:12: Illegal type: 'Record'\n",
          "unexpected (1): 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)\n",
          "---\n",
          "expected      : [13:12: Illegal type: 'Record', 16:12: Illegal type: 'Record']\n",
          "but was       : [1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testIllegalTypeCheckAutoGen(IllegalTypeCheckTest.java:378)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIllegalTypeCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testIllegalTypeCheckAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n44_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'disallowAnnotation' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'disallowAnnotation' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'disallowAnnotation' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:378)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'disallowAnnotation' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n3": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n3_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'interfaceOrAnnotationNames' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:655)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'interfaceOrAnnotationNames' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:655)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'interfaceOrAnnotationNames' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:655)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'interfaceOrAnnotationNames' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n3_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n21_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n21_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.meta.JavadocMetadataScraperTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n6_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputIllegalTypeTestRecordsPass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateRecordsPassAutoGen(AllChecksTest.java:651)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n17": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n17_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'classMemberModifiers' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:656)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'classMemberModifiers' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:656)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'classMemberModifiers' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:656)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'classMemberModifiers' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testRecordPublicStaticAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n28_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 5:20: Usage of type 'java.util.Date' is not allowed.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testRecordPublicStaticAutoGen(IllegalTypeCheckTest.java:378)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 5:20: Usage of type 'java.util.Date' is not allowed.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 5:20: Usage of type 'java.util.Date' is not allowed.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/InputIllegalTypeTestRecordsPass.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testRecordPublicStaticAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testRecordPublicStaticAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.meta.JavadocMetadataScraperTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n11_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputIllegalTypeTestInnerRecordsPass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateInnerRecordsPassAutoGen(AllChecksTest.java:655)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n45_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'ignorePrimitiveTypes' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:384)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'ignorePrimitiveTypes' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:384)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'ignorePrimitiveTypes' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest.testValidateRecordsPassAutoGen(IllegalTypeCheckTest.java:384)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'ignorePrimitiveTypes' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testNpeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n33_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'format' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testNpeAutoGen(AllChecksTest.java:653)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'format' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testNpeAutoGen(AllChecksTest.java:653)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'format' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testNpeAutoGen(AllChecksTest.java:653)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'format' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testNpeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testNpeAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n32": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n32_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'illegalMemberModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateRecordsPassAutoGen(AllChecksTest.java:653)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'illegalMemberModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateRecordsPassAutoGen(AllChecksTest.java:653)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'illegalMemberModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testValidateRecordsPassAutoGen(AllChecksTest.java:653)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck - Property 'illegalMemberModifier' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n2_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: Config comment not specified properly in InputIllegalTypeTestInnerRecordsPass\n",
          "\tat com.puppycrawl.tools.checkstyle.meta.JavadocMetadataScraperTest.testValidateInnerRecordsPassAutoGen(JavadocMetadataScraperTest.java:259)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Failed to read InputIllegalTypeTestInnerRecordsPass\n",
          "\tat com.puppycrawl.tools.checkstyle.meta.JavadocMetadataScraperTest.testValidateInnerRecordsPassAutoGen(JavadocMetadataScraperTest.java:259)\n",
          "Caused by: java.nio.file.NoSuchFileException: InputIllegalTypeTestInnerRecordsPass\n",
          "\tat com.puppycrawl.tools.checkstyle.meta.JavadocMetadataScraperTest.testValidateInnerRecordsPassAutoGen(JavadocMetadataScraperTest.java:259)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: Config comment not specified properly in InputIllegalTypeTestInnerRecordsPass"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testValidateInnerRecordsPassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.meta.JavadocMetadataScraperTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheckTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateInnerRecordsPassAutoGen"
    },
    "checkstyle_checkstyle_10958_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/10958/checkstyle_checkstyle_10958_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testValidateRecordsPassAutoGen"
    }
  },
  "checkstyle_checkstyle-11020": {
    "checkstyle_checkstyle_11020_markdown_n11": "[error] StopIteration()",
    "checkstyle_checkstyle_11020_markdown_n7": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_11020_markdown_n49": "[error] LexerError('Could not process token at \"\\\\\", line 4: final String[] expected = ArrayUtils.EMPTY\\\\_STRING\\\\_ARRAY;')",
    "checkstyle_checkstyle_11020_markdown_n23": "[error] LexerError('Unterminated character/string literal at \"\\n\", line 26: \"')",
    "checkstyle_checkstyle_11020_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n47_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n47_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testIssue102AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFunAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n10_buggy.txt",
        "fib_error_msg": [
          "org.opentest4j.AssertionFailedError: expected: <true> but was: <false>\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest.testFunAutoGen(XdocsPagesTest.java:1824)\n",
          "\n"
        ],
        "exception_type": "org.opentest4j.AssertionFailedError",
        "value_matching": "expected: <true> but was: <false>",
        "failure_message": "org.opentest4j.AssertionFailedError: expected: <true> but was: <false>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFunAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testFunAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testSimplifyBooleanExpressionFalseNegativeAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsUrlTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsUrlTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "test_SimplifyBooleanExpressionAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n33_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputSimplifyBooleanExpression.java differ.\n",
          "missing (2)   : 6:36: Duplicated property ' == true' ( occurrence(s))., 7:32: Duplicated property ' == false' ( occurrence(s)).\n",
          "unexpected (1): 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputSimplifyBooleanExpression.java (No such file or directory)\n",
          "---\n",
          "expected      : [6:36: Duplicated property ' == true' ( occurrence(s))., 7:32: Duplicated property ' == false' ( occurrence(s)).]\n",
          "but was       : [1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/uniqueproperties/InputSimplifyBooleanExpression.java (No such file or directory)]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest.test_SimplifyBooleanExpressionAutoGen(UniquePropertiesCheckTest.java:194)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "test_SimplifyBooleanExpressionAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest#test_SimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n42_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n42_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsUrlTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n41_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n41_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n16": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSimplifyBooleanExpressionFalseNegativeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n16_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputSimplifyBooleanExpressionFalseNegative.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testSimplifyBooleanExpressionFalseNegativeAutoGen(AllChecksTest.java:649)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSimplifyBooleanExpressionFalseNegativeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionFalseNegativeAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n24_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testExampleAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n12_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n12_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#test_simplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n29": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFalseNegativeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n29_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputSimplifyBooleanExpressionFalseNegative.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFalseNegativeAutoGen(AllChecksTest.java:649)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFalseNegativeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalseNegativeAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testTestAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.UniquePropertiesCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n26_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n26_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n28_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testSimplifyBooleanExpressionAutoGen"
    },
    "checkstyle_checkstyle_11020_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11020/checkstyle_checkstyle_11020_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsUrlTest#testSimplifyBooleanExpressionAutoGen"
    }
  },
  "checkstyle_checkstyle-11085": {
    "checkstyle_checkstyle_11085_markdown_n21": "[error] StopIteration()",
    "checkstyle_checkstyle_11085_markdown_n25": "[error] LexerError('Could not process token at \"\\\\\", line 18: /var/tmp $ RUN\\\\_LOCALE=\"-Duser.language=en -Duser.country=US\"')",
    "checkstyle_checkstyle_11085_markdown_n14": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n14_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n14_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n28_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest#testNoViolationAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n32": {
      "buggy": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": true,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.utils.TestUtil#testAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n46": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n22": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n34": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n43": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n27": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n7": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n36": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n6": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ScopeUtilTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n15_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.AnnotationUtilTest#testRuleAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n8": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n8_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n8_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n0_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n20": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n20_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n20_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest#testStringLiteralsAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testGetStartPosAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n4_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: expected:<2> but was:<0>\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest.testGetStartPosAutoGen(XdocsPagesTest.java:1902)\n",
          "\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": "expected:<2> but was:<0>",
        "failure_message": "java.lang.AssertionError: expected:<2> but was:<0>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testGetStartPosAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testGetStartPosAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n5": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsUrlTest#test1AutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n10_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n23_buggy.txt",
        "fib_error_msg": [
          "org.junit.ComparisonFailure: expected:<A[]> but was:<A[B]>\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest.testAutoGen(LocalVariableNameCheckTest.java:94)\n",
          "\n"
        ],
        "exception_type": "org.junit.ComparisonFailure",
        "value_matching": "expected:<A[]> but was:<A[B]>",
        "failure_message": "org.junit.ComparisonFailure: expected:<A[]> but was:<A[B]>"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest#testAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n17_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n17_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n19": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n19_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.grammar.comments.AllBlockCommentsTest#testEqualsAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n1_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n13_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testStringLiteralExpressionAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n24_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testLiteralExpressionAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n31_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.CommonUtilTest#testLiteralExpressionAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n35": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n35_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n35_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n2_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n44_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n9": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n9_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n9_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testStringAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n29_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n29_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest#testStringLiteralEqualityAutoGen"
    },
    "checkstyle_checkstyle_11085_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n11_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11085/checkstyle_checkstyle_11085_markdown_n11_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testLiteralStringAutoGen"
    }
  },
  "checkstyle_checkstyle-11270": {
    "checkstyle_checkstyle_11270_markdown_n31": "[error] LexerError('Unterminated character/string literal at \"\"\", line 17: assertEquals(')",
    "checkstyle_checkstyle_11270_markdown_n4": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_11270_markdown_n15": "[error] LexerError('Illegal escape character at \"_\", line 7: + \"        \\\\\"https://checkstyle.org/dtds/configuration\\\\_1\\\\_3.dtd\\\\\">\\\\n\"')",
    "checkstyle_checkstyle_11270_markdown_n32": "[error] LexerError('Unterminated character/string literal at \" \", line 20: \"12:48: \" + getCheckMessage(RedundantModifierCheck.class, \"redundant.mo')",
    "checkstyle_checkstyle_11270_markdown_n20": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_11270_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testRedundantModifierAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n48": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testRedundantModifierAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n49": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFalseNegativeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n49_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputRedundantModifier.java differ.\n",
          "missing (9)\n",
          "#1      : 4:12: Redundant 'static' modifier.\n",
          "#2      : 7:5: Redundant 'public' modifier.\n",
          "#3      : 7:12: Redundant 'static' modifier.\n",
          "#4      : 10:5: Redundant 'public' modifier.\n",
          "#5      : 10:12: Redundant 'static' modifier.\n",
          "#6      : 13:5: Redundant 'public' modifier.\n",
          "#7      : 13:12: Redundant 'static' modifier.\n",
          "#8      : 16:5: Redundant 'public' modifier.\n",
          "#9      : 16:12: Redundant 'static' modifier.\n",
          "\n",
          "unexpected (1)\n",
          "#1      : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputRedundantModifier.java (No such file or directory)\n",
          "---\n",
          "expected: [4:12: Redundant 'static' modifier., 7:5: Redundant 'public' modifier., 7:12: Redundant 'static' modifier., 10:5: Redundant 'public' modifier., 10:12: Redundant 'static' modifier., 13:5: Redundant 'public' modifier., 13:12: Redundant 'static' modifier., 16:5: Redundant 'public' modifier., 16:12: Redundant 'static' modifier.]\n",
          "but was : [1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputRedundantModifier.java (No such file or directory)]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFalseNegativeAutoGen(AllChecksTest.java:657)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFalseNegativeAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n49_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalseNegativeAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n24_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n24_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testRedundantModifierAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n46": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n7_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n7_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.JavadocUtilTest#testRedundantModifierAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n39_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n39_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testRedundantModifierAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n23": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.iterators.ReverseListIteratorTest#testFalseNegativeAutoGen"
    },
    "checkstyle_checkstyle_11270_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n28_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11270/checkstyle_checkstyle_11270_markdown_n28_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalseNegativeAutoGen"
    }
  },
  "checkstyle_checkstyle-11383": {
    "checkstyle_checkstyle_11383_markdown_n20": "[error] StopIteration()",
    "checkstyle_checkstyle_11383_markdown_n38": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_11383_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n31": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n11": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n25_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n18_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testSummaryJavadocCheckAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n45_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n45_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testFalsePositiveAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n5_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n5_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolderTest#testFalsePositiveSummaryJavadocAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n40_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n40_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testViolation2AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSummaryJavadocAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n15_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/InputSummaryJavadoc.java differ.\n",
          "missing (2)   : 1: First sentence of Javadoc is missing an ending period., 2: \n",
          "unexpected (1): 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/InputSummaryJavadoc.java (No such file or directory)\n",
          "---\n",
          "expected      : [1: First sentence of Javadoc is missing an ending period., 2: ]\n",
          "but was       : [1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/InputSummaryJavadoc.java (No such file or directory)]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest.testSummaryJavadocAutoGen(AbstractJavadocCheckTest.java:707)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSummaryJavadocAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testSummaryJavadocAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n23_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n23_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.CheckerTest#testJavadocSummaryAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n36_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n36_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue11051AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n13_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/javadoc/InputSummaryJavadocCheck.java differ.\n",
          "missing (2)   : 2: Summary of Javadoc is missing an ending period., 10: First sentence of Javadoc is missing an ending period.\n",
          "unexpected (1): 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/javadoc/InputSummaryJavadocCheck.java (No such file or directory)\n",
          "---\n",
          "expected      : [2: Summary of Javadoc is missing an ending period., 10: First sentence of Javadoc is missing an ending period.]\n",
          "but was       : [1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/javadoc/InputSummaryJavadocCheck.java (No such file or directory)]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest.testIssue11051AutoGen(AbstractJavadocCheckTest.java:706)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue11051AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testIssue11051AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n6_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n6_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.AbstractModuleTestSupport#testIssue11051AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n32_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n32_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testIssue11051AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue11051AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n48_buggy.txt",
        "fib_error_msg": [
          "java.lang.AssertionError: Exception: java.util.MissingResourceException: Can't find resource for bundle java.util.PropertyResourceBundle, key summary.missing\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testIssue11051AutoGen(AllChecksTest.java:657)\n",
          "\n"
        ],
        "exception_type": "java.lang.AssertionError",
        "value_matching": null,
        "failure_message": "java.lang.AssertionError: Exception: java.util.MissingResourceException: Can't find resource for bundle java.util.PropertyResourceBundle, key summary.missing"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testIssue11051AutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue11051AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n30_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n30_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest#testIssue11051AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n37_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n37_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.iterators.ReverseListIteratorTest#testSummaryJavadocAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n43_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n43_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n22_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n22_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testFalsePositiveAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n34_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n34_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testFalsePositiveAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n46_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n46_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n27_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n27_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testIssue11051AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n33_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n33_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalsePositiveSummaryJavadocCheckAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n0": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSummaryJavadocCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n0_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/InputSummaryJavadocCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 4:1: First sentence of Javadoc is missing an ending period.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/InputSummaryJavadocCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest.testSummaryJavadocCheckAutoGen(AbstractJavadocCheckTest.java:707)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 4:1: First sentence of Javadoc is missing an ending period.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/InputSummaryJavadocCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 4:1: First sentence of Javadoc is missing an ending period.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/InputSummaryJavadocCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSummaryJavadocCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n0_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testSummaryJavadocCheckAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n16_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n16_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testSummaryJavadocAutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n4_buggy.txt"
      },
      "fixed": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheckTest#testIssue11051AutoGen"
    },
    "checkstyle_checkstyle_11383_markdown_n10": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSummaryJavadocCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n10_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/package-info-summary-javadoc-error.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 5: First sentence of Javadoc is missing an ending period.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/package-info-summary-javadoc-error.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest.testSummaryJavadocCheckAutoGen(AbstractJavadocCheckTest.java:707)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 5: First sentence of Javadoc is missing an ending period.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/package-info-summary-javadoc-error.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 5: First sentence of Javadoc is missing an ending period.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/abstractjavadoc/package-info-summary-javadoc-error.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testSummaryJavadocCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11383/checkstyle_checkstyle_11383_markdown_n10_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheckTest#testSummaryJavadocCheckAutoGen"
    }
  },
  "checkstyle_checkstyle-11468": {
    "checkstyle_checkstyle_11468_markdown_n39": "[error] JavaSyntaxError('')",
    "checkstyle_checkstyle_11468_markdown_n41": "[error] LexerError('Illegal escape character at \"_\", line 2: checkConfig.addAttribute(\"tokens\", \"CLASS\\\\_DEF,ENUM\\\\_DEF,INTERFACE\\\\_DEF\");')",
    "checkstyle_checkstyle_11468_markdown_n36": "[error] LexerError('Illegal escape character at \"$\", line 4: moduleConfig.addAttribute(\"excludedClasses\", \"[a-zA-Z1-9]+\\\\$[a-zA-Z1-9]+\");')",
    "checkstyle_checkstyle_11468_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n42_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n34": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n45": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n32_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n9_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n2": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n2_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:5: Property key 'a' is not in the right order with previous property '{1}'.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest.testFinalClassAutoGen(OrderedPropertiesCheckTest.java:210)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3:5: Property key 'a' is not in the right order with previous property '{1}'.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3:5: Property key 'a' is not in the right order with previous property '{1}'.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n2_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n29_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.XdocsPagesTest#testAnonymousClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n40": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n40_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n44": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAnonymousAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n44_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClassAnonymous.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFinalClassAnonymousAutoGen(AllChecksTest.java:643)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAnonymousAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n44_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassAnonymousAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n20_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n48_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClassCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:5: Class a should be declared as final.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClassCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFinalClassCheckAutoGen(AllChecksTest.java:646)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3:5: Class a should be declared as final.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClassCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3:5: Class a should be declared as final.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClassCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassCheckAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n13": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n13_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n22_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testFinalClassCheckAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n8_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest#testFalsePositivesAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n15": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassCheckWithAnonymousClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n15_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClassCheckAnonymousClass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFinalClassCheckWithAnonymousClassAutoGen(AllChecksTest.java:641)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassCheckWithAnonymousClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n15_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassCheckWithAnonymousClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n28": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n28_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassCheckAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n17_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue9357AutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n21_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n30_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolderTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n14_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n0_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n49_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testFinalClassCheckAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n33": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n33_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n33_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtilTest#testAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n35_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalsePositiveWithAnonymousClassesAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n31_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:5: Property key 'a' is not in the right order with previous property '{1}'.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest.testFinalClassAutoGen(OrderedPropertiesCheckTest.java:207)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3:5: Property key 'a' is not in the right order with previous property '{1}'.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3:5: Property key 'a' is not in the right order with previous property '{1}'.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/orderedproperties/InputFinalClassCheck.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n18": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n18_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n12_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n16_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassCheckAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n19": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n19_buggy.txt",
        "fib_error_msg": [
          "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck - Property 'ignoreModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.TreeWalkerTest.testFinalClassCheckAutoGen(TreeWalkerTest.java:770)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck - Property 'ignoreModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.TreeWalkerTest.testFinalClassCheckAutoGen(TreeWalkerTest.java:770)\n",
          "Caused by: com.puppycrawl.tools.checkstyle.api.CheckstyleException: Property 'ignoreModifier' does not exist, please check the documentation\n",
          "\tat com.puppycrawl.tools.checkstyle.TreeWalkerTest.testFinalClassCheckAutoGen(TreeWalkerTest.java:770)\n",
          "\n"
        ],
        "exception_type": "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
        "value_matching": null,
        "failure_message": "com.puppycrawl.tools.checkstyle.api.CheckstyleException: cannot initialize module com.puppycrawl.tools.checkstyle.TreeWalker - cannot initialize module com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck - Property 'ignoreModifier' does not exist, please check the documentation"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassCheckAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n19_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testFinalClassCheckAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n27_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testFinalClass_anonInnerClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n23_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testAnonymousClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n4": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n4_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClassAnonymousClass.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFinalClassAutoGen(AllChecksTest.java:643)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n4_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n1": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n1_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.ComparisonFailureWithFacts: \n",
          "Violations for /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClass.java differ.\n",
          "value of: iterable.onlyElement()\n",
          "expected: 3:5: Class {0} should be declared as final.\n",
          "but was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClass.java (No such file or directory)\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFinalClassAutoGen(AllChecksTest.java:644)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.ComparisonFailureWithFacts",
        "value_matching": "expected: 3:5: Class {0} should be declared as final.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClass.java (No such file or directory)\n",
        "failure_message": "com.google.common.truth.ComparisonFailureWithFacts:expected: 3:5: Class {0} should be declared as final.\nbut was : 1: Got an exception - /workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputFinalClass.java (No such file or directory)\n"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFinalClassAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n1_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n3_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testBugAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n6_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.OrderedPropertiesCheckTest#testAnonymousClassInsideAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n26_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest#testFinalClassAutoGen"
    },
    "checkstyle_checkstyle_11468_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11468/checkstyle_checkstyle_11468_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFinalClassCheckAutoGen"
    }
  },
  "checkstyle_checkstyle-11926": {
    "checkstyle_checkstyle_11926_markdown_n34": "[error] TypeError(\"'in <string>' requires string as left operand, not NoneType\")",
    "checkstyle_checkstyle_11926_markdown_n24": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n24_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testGenericConstructorWithoutAccessModifierAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n23": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n23_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testCheckstyleConfigAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n26": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n26_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n14": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n14_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue1AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n37": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n33": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n46": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n40": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n3": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n12": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n8": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n4": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n9": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n5": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n25": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n42": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n49": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n32": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n22": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n2": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n20": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n37_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.XpathMapperTest#testIssue107AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n43": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n43_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testInvalidJavadocPositionFalsePositiveAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n0": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n0_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.DetailAstImplTest#testFalsePositiveAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n1": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n1_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n47": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n47_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidJavadocPositionAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n18": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFalsePositiveForGenericConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n18_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputInvalidJavadocPositionFalsePositiveGenericConstructor.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testFalsePositiveForGenericConstructorAutoGen(AllChecksTest.java:643)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testFalsePositiveForGenericConstructorAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n18_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalsePositiveForGenericConstructorAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n27": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n27_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testWrongPositionForGenericsAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n38": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n38_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n15": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n38_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n48": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testInvalidJavadocPositionForConstructorWithoutAccessModifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n48_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputInvalidJavadocPositionForConstructorWithoutAccessModifier.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testInvalidJavadocPositionForConstructorWithoutAccessModifierAutoGen(AllChecksTest.java:643)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testInvalidJavadocPositionForConstructorWithoutAccessModifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n48_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidJavadocPositionForConstructorWithoutAccessModifierAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n7": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n7_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidJavadocPositionAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n28": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n28_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.iterators.ReverseListIteratorTest#testDummyAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n11": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n28_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.iterators.ReverseListIteratorTest#testDummyAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n45": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n28_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.xpath.iterators.ReverseListIteratorTest#testDummyAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n17": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n17_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidJavadocPositionAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n19": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n19_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheckTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n44": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n44_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalsePositiveAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n31": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testInvalidJavadocPositionAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n31_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/indentation/InputInvalidJavadocPosition.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest.testInvalidJavadocPositionAutoGen(IndentationCheckTest.java:3144)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testInvalidJavadocPositionAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n31_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest#testInvalidJavadocPositionAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n13": {
      "buggy": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testInvalidJavadocPositionFalsePositiveForTheGenericConstructorWithoutAccessModifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n13_buggy.txt",
        "fib_error_msg": [
          "com.google.common.truth.AssertionErrorWithFacts: \n",
          "Files with expected violations and actual violations differ.\n",
          "value of: keySet()\n",
          "expected to be empty\n",
          "but was : [/workspace/report2test/llm-test-gen/ghjava/exp_samples/checkstyle/src/test/resources/com/puppycrawl/tools/checkstyle/internal/allchecks/InputInvalidJavadocPositionCheck.java]\n",
          "\tat com.puppycrawl.tools.checkstyle.internal.AllChecksTest.testInvalidJavadocPositionFalsePositiveForTheGenericConstructorWithoutAccessModifierAutoGen(AllChecksTest.java:641)\n",
          "\n"
        ],
        "exception_type": "com.google.common.truth.AssertionErrorWithFacts",
        "value_matching": null,
        "failure_message": "com.google.common.truth.AssertionErrorWithFacts:"
      },
      "fixed": {
        "compile_error": false,
        "runtime_error": false,
        "failed_tests": [
          "testInvalidJavadocPositionFalsePositiveForTheGenericConstructorWithoutAccessModifierAutoGen"
        ],
        "autogen_failed": true,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n13_fixed.txt"
      },
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidJavadocPositionFalsePositiveForTheGenericConstructorWithoutAccessModifierAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n21": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n21_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.TreeWalkerTest#testIssue122AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n35": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n35_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testIssue108AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n30": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n30_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testFalsePositiveAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n29": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n29_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testInvalidJavadocPositionAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n36": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n36_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidJavadocPositionAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n6": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n6_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidJavadocPositionAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n39": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n39_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest#testIssue111AutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n10": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n10_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testGenericConstructorAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n41": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n41_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest#testIssueAutoGen"
    },
    "checkstyle_checkstyle_11926_markdown_n16": {
      "buggy": {
        "compile_error": true,
        "runtime_error": false,
        "failed_tests": [],
        "autogen_failed": false,
        "stdout": "./ghjava/analysis/output/2022CPTwoExample_injection/checkstyle_checkstyle/11926/checkstyle_checkstyle_11926_markdown_n16_buggy.txt"
      },
      "fixed": null,
      "success": false,
      "injected_test": "com.puppycrawl.tools.checkstyle.internal.AllChecksTest#testInvalidConstructorJavadocAutoGen"
    }
  }
}